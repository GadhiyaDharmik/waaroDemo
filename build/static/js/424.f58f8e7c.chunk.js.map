{"version":3,"file":"static/js/424.f58f8e7c.chunk.js","mappings":"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","sources":["pages/AllCategory.js"],"sourcesContent":["import {\r\n  Avatar,\r\n  Button as MUIButton,\r\n  Card as MUICard,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  InputBase,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\nimport { Button } from \"react-bootstrap\"; // For React Bootstrap Buttons\r\nimport { MdOutlineAddBox } from \"react-icons/md\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axiosMain from \"./utils/axiosMain\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { useCart } from \"../components/CartContext\";\r\n\r\nfunction AllCategory() {\r\n  const navigate = useNavigate();\r\n  // Sample data for cards\r\n  const [cards, setCards] = useState([]);\r\n  //  Array(12).fill({\r\n  //   title: \"Doctor & Hospital\",\r\n  //   subtitle: \"Salon & Beauty Parlour\",\r\n  // });\r\n\r\n  const { addToCart } = useCart(); // Get addToCart function\r\n\r\n  useEffect(() => {\r\n    axiosMain\r\n      .get(\"/data-category\")\r\n      .then((res) => {\r\n        if (res.success) {\r\n          setCards(res.dataCategories);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-[#F3F2FF] flex\">\r\n      {/* Main Content */}\r\n      <main>\r\n        {/* <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"32px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" fontWeight=\"bold\">\r\n            Dashboard / All Category\r\n          </Typography>\r\n          <div style={{ display: \"flex\", alignItems: \"center\", gap: \"16px\" }}>\r\n            <MUIButton variant=\"outlined\" startIcon={<ShoppingCart />}>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"-4px\",\r\n                  right: \"-4px\",\r\n                  backgroundColor: \"red\",\r\n                  color: \"white\",\r\n                  borderRadius: \"50%\",\r\n                  width: \"16px\",\r\n                  height: \"16px\",\r\n                  fontSize: \"12px\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                1\r\n              </div>\r\n            </MUIButton>\r\n            <Avatar src=\"https://github.com/shadcn.png\" alt=\"CN\" />\r\n          </div>\r\n        </div> */}\r\n\r\n        {/* <div style={{ position: \"relative\", marginBottom: \"32px\" }}> */}\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                border: \"2px solid #000\",\r\n                borderRadius: \"15px\",\r\n                padding: \"0.5rem 1rem\",\r\n                maxWidth: \"400px\",\r\n                backgroundColor: \"white\",\r\n                marginBottom: \"10px\",\r\n                background: \"transparent\",\r\n                flexDirection: \"row-reverse\",\r\n              }}\r\n            >\r\n              <SearchIcon\r\n                sx={{ color: \"#000000\", marginRight: \"8px\", cursor: \"pointer\" }}\r\n              />\r\n              <InputBase\r\n                placeholder=\"Search Category\"\r\n                fullWidth\r\n                sx={{\r\n                  color: \"#000\",\r\n                  fontSize: \"1rem\",\r\n                  padding: \"4px 8px 5px\",\r\n                }}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className=\"text-end\">\r\n            <MUIButton\r\n              variant=\"contained\"\r\n              startIcon={<ShoppingCartIcon />}\r\n              sx={{\r\n                backgroundColor: \"#000\",\r\n                color: \"white\",\r\n                borderRadius: \"15px\",\r\n                textTransform: \"none\",\r\n                fontSize: \"1rem\",\r\n                padding: \"1rem 2.5rem\",\r\n                \"&:hover\": {\r\n                  backgroundColor: \"#000\",\r\n                },\r\n              }}\r\n              onClick={() => navigate(\"/cart\")}\r\n            >\r\n              Cart\r\n            </MUIButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* </div> */}\r\n\r\n        <Grid container spacing={2}>\r\n          {cards.map((card, index) => (\r\n            <Grid item xs={12} sm={6} md={3} lg={3} xl={2} key={index}>\r\n              <MUICard\r\n                style={{\r\n                  backgroundColor: \"#000000\",\r\n                  borderRadius: \"15px\",\r\n                  overflow: \"hidden\",\r\n                  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n                  textAlign: \"center\",\r\n                  border: \"5px solid #000\",\r\n                }}\r\n              >\r\n                {/* Card Header */}\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#000\",\r\n                    height: \"120px\",\r\n                    backgroundImage: `url(${card.image})`,\r\n                    backgroundSize: \"cover\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                  }}\r\n                ></div>\r\n\r\n                {/* Card Body */}\r\n                <CardContent\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    gap: \"0px\",\r\n                    background: \"#000\",\r\n                    padding: \"14px\",\r\n                    color: \"#ffffff\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    style={{ fontWeight: \"bold\" }}\r\n                    className=\"card-text\"\r\n                  >\r\n                    {card.title}\r\n                    <br />\r\n                    {card.description}\r\n                  </Typography>\r\n\r\n                  <hr\r\n                    style={{\r\n                      width: \"100%\",\r\n                      border: \"none\",\r\n                      borderTop: \"1px solid #ffffff\",\r\n                    }}\r\n                  />\r\n\r\n                  <Button\r\n                    variant=\"text\"\r\n                    style={{\r\n                      color: \"#FABB18\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                    onClick={() => {\r\n                      const userData = JSON.parse(\r\n                        localStorage.getItem(\"userDetail\")\r\n                      );\r\n\r\n                      if (!userData || !userData.user._id) {\r\n                        console.error(\"User not found in localStorage\");\r\n                        return;\r\n                      }\r\n\r\n                      const userId = userData.user._id; // Extract userId\r\n\r\n                      axiosMain\r\n                        .post(\r\n                          \"/cart/add\",\r\n                          {\r\n                            categoryId: card._id,\r\n                            userId,\r\n                          }\r\n                          // { headers: { Authorization: `Bearer ${token}` } }\r\n                        )\r\n                        .then((res) => {\r\n                          if (res.success) {\r\n                            toast.success(res.message);\r\n\r\n                            addToCart(userId, card._id);\r\n                          } else {\r\n                            toast.error(res.message);\r\n                          }\r\n                        })\r\n                        .catch((err) => console.log(err));\r\n                    }}\r\n                  >\r\n                    <MdOutlineAddBox\r\n                      style={{\r\n                        marginRight: \"8px\",\r\n                        fontSize: \"18px\",\r\n                        color: \"#FABB18\",\r\n                      }}\r\n                    />{\" \"}\r\n                    Add to Cart\r\n                  </Button>\r\n                </CardContent>\r\n              </MUICard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllCategory;\r\n"],"names":["navigate","useNavigate","cards","setCards","useState","addToCart","useCart","useEffect","axiosMain","get","then","res","success","dataCategories","catch","err","console","log","_jsx","className","children","_jsxs","Grid","container","spacing","item","xs","sm","md","lg","xl","Box","sx","display","alignItems","border","borderRadius","padding","maxWidth","backgroundColor","marginBottom","background","flexDirection","SearchIcon","color","marginRight","cursor","InputBase","placeholder","fullWidth","fontSize","MUIButton","variant","startIcon","ShoppingCartIcon","textTransform","onClick","map","card","index","MUICard","style","overflow","boxShadow","textAlign","height","backgroundImage","image","backgroundSize","backgroundPosition","backgroundRepeat","CardContent","gap","Typography","fontWeight","title","description","width","borderTop","Button","userData","JSON","parse","localStorage","getItem","user","_id","error","userId","post","categoryId","toast","message","MdOutlineAddBox"],"sourceRoot":""}