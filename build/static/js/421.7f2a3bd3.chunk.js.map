{"version":3,"file":"static/js/421.7f2a3bd3.chunk.js","mappings":"kVA2fA,SAASA,EAAUC,GAA+B,IAA9B,MAAEC,EAAK,iBAAEC,GAAkBF,EAC7C,OACGG,EAAAA,EAAAA,MAAA,OACCC,QAASA,IAAMF,GAAiB,GAChCG,UAAU,oIAAmIC,SAAA,EAE7IC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kGAAiGC,UAC9GC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,+CAA8CC,SAAC,SAEjEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iCAAgCC,SAAEL,MAGrD,CAEA,MAAMO,EAAcC,IAA+C,IAA9C,YAAEC,EAAW,UAAEC,EAAS,aAAEC,GAAcH,EAC3D,MAAOI,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,OACpDC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,CAS/BK,YAAa,GACbC,SAAU,MAGLC,EAASC,IAAcR,EAAAA,EAAAA,UAAS,KAChCS,EAAgBC,IAAqBV,EAAAA,EAAAA,UAAS,eAC9CW,EAAmBC,IAAwBZ,EAAAA,EAAAA,UAAS,kBAEpDa,EAAaC,IAAkBd,EAAAA,EAAAA,UAAS,MACxCe,EAAUC,IAAehB,EAAAA,EAAAA,UAAS,IAClCiB,EAAYC,IAAiBlB,EAAAA,EAAAA,UAAS,aAEvCmB,EAAcN,EAAcE,EAC5BK,EAAiB,GAAGC,KAAKC,MAAoB,KAAdT,MAAuBQ,KAAKC,MACjD,KAAdT,KAwBIU,EAAoBC,IACxB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BvB,GAASwB,IAAI,IAAWA,EAAM,CAACH,GAAOC,KAAS,EAqDjD,OACEtC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,+DAA8DC,SAAA,EAC3EC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,YAAYuC,SApDPC,UACvBN,EAAEO,iBAGF,IAAK,IAADC,EACF,MAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,eAC7CC,EAAmB,OAAVL,QAAU,IAAVA,GAAgB,QAAND,EAAVC,EAAYM,YAAI,IAAAP,OAAN,EAAVA,EAAkBQ,IAEjC,IAAIC,EAAW,GAEf,IAAK3C,EAEH,YADA4C,QAAQC,KAAK,gDAKf,GAAI7C,GAAqBA,aAA6B8C,KAAM,CAC1D,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQjD,GAExB,MAAMkD,QAAkBC,EAAAA,EAAU9C,KAAK,UAAW0C,EAAU,CAC1DK,QAAS,CAAE,eAAgB,yBAI7B,GAFAR,QAAQS,IAAIH,EAAW,aAEV,OAATA,QAAS,IAATA,IAAAA,EAAWI,QAGb,MAAM,IAAIC,MAAM,uBAFhBZ,EAAoB,OAATO,QAAS,IAATA,OAAS,EAATA,EAAWM,OAI1B,CAGA,MAAMC,EAAU,IACXpD,EAEHmC,OAAQA,EACRkB,MAAOf,GAETC,QAAQS,IAAII,EAAS,WAErB,MAAME,QAAYR,EAAAA,EAAU9C,KAAK,eAAgBoD,GACjDb,QAAQS,IAAI,mBAAoBM,EAAIC,KAGtC,CAAE,MAAOC,GACPjB,QAAQkB,MAAM,0BAA2BD,EAC3C,GAKyDpE,SACtC,KAAdK,IACCR,EAAAA,EAAAA,MAAAyE,EAAAA,SAAA,CAAAtE,SAAA,CACG,KACDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAAC,iBAEtCH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBC,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,sCAAqCC,SAAC,0BAKvDH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBC,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8DAA6DC,SACzEO,GACCN,EAAAA,EAAAA,KAAA,OACEsE,IAC2B,kBAAlBC,cACHjE,EACAkE,IAAIC,gBAAgBnE,GAE1BoE,IAAI,UACJ5E,UAAU,gCAGZE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAKnBF,EAAAA,EAAAA,MAAA,SACE+E,QAAQ,SACR7E,UAAU,gFAA+EC,SAAA,EAEzFC,EAAAA,EAAAA,KAAC4E,EAAAA,EAAM,CAACC,KAAM,GAAIC,MAAM,WACxB9E,EAAAA,EAAAA,KAAA,SACE+E,KAAK,OACLC,GAAG,SACHC,OAAO,UACPnF,UAAU,SACVoF,SA1GKlD,IACvB,MAAMmD,EAAOnD,EAAEG,OAAOiD,MAAM,GACxBD,GACF5E,EAAqB4E,EACvB,cA4GUvF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,yBAGlDC,EAAAA,EAAAA,KAAA,YACEiC,KAAK,cACLoD,KAAM,EACNC,YAAY,oBACZpD,MAAOvB,EAAKE,YACZqE,SAAUnD,EACVjC,UAAU,uHAKdF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,uBAGlDC,EAAAA,EAAAA,KAAA,YACEiC,KAAK,WACLoD,KAAM,EACNC,YAAY,kBACZpD,MAAOvB,EAAKG,SACZoE,SAAUnD,EACVjC,UAAU,0HAKhBE,EAAAA,EAAAA,KAAA,UACE+E,KAAK,SACLjF,UAAU,yDAAwDC,SACnE,iBAaPH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CACiB,WAAdK,IACCR,EAAAA,EAAAA,MAAAyE,EAAAA,SAAA,CAAAtE,SAAA,EACEH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAAC,0DAIvCH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWC,SAAA,EACxBH,EAAAA,EAAAA,MAAA,SAAOE,UAAU,oBAAmBC,SAAA,EAClCH,EAAAA,EAAAA,MAAA,QAAME,UAAU,UAASC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAC,wBAC/BC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,8DAKrCC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,QACL9C,KAAK,SACLnC,UAAU,0BAIdF,EAAAA,EAAAA,MAAA,SAAOE,UAAU,oBAAmBC,SAAA,EAClCH,EAAAA,EAAAA,MAAA,QAAME,UAAU,UAASC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAC,wBAC/BC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,+EAKrCC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,QACL9C,KAAK,SACLnC,UAAU,2BAIdF,EAAAA,EAAAA,MAAA,SAAOE,UAAU,oBAAmBC,SAAA,EAClCH,EAAAA,EAAAA,MAAA,QAAME,UAAU,UAASC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAC,kBAC/BC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,kEAIrCC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,QACL9C,KAAK,SACLnC,UAAU,gCAKlBE,EAAAA,EAAAA,KAAA,UACE+E,KAAK,SACLjF,UAAU,kEACVD,QAASA,IAAMQ,EAAa,UAAUN,SACvC,cAMU,WAAdK,IACCJ,EAAAA,EAAAA,KAAAqE,EAAAA,SAAA,CAAAtE,UACEH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,SAAC,SACnDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,yCAAwCC,SAAC,6BAItDH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWC,SAAA,EACxBH,EAAAA,EAAAA,MAAA,SAAOE,UAAU,mDAAkDC,SAAA,EACjEH,EAAAA,EAAAA,MAAA,QAAME,UAAU,eAAcC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oBAAmBC,SAAC,6BAGpCC,EAAAA,EAAAA,KAAA,SAAM,2FAIRJ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OACEF,UAAW,2EACTW,EAAY,cAAgB,eAC3BV,UAEHC,EAAAA,EAAAA,KAAA,OACEF,UAAW,sGACTW,EAAY,0BAA4B,SAI9CT,EAAAA,EAAAA,KAAA,SACE+E,KAAK,WACLjF,UAAU,UACVyF,QAAS9E,EACTyE,SAAWlD,GAAMtB,EAAasB,EAAEG,OAAOoD,kBAK7C3F,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,4DAA2DC,SAAC,mBAG7EC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,OACLO,YAAY,iBACZxF,UAAU,6CAIdF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,4DAA2DC,SAAC,eAG7EC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,qDAAoDC,UACpEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,0CAIZC,EAAAA,EAAAA,KAAA,UACE+E,KAAK,SACLjF,UAAU,sEACVD,QAASA,IAAMQ,EAAa,UAAUN,SACvC,mBAQM,WAAdK,IACCJ,EAAAA,EAAAA,KAAAqE,EAAAA,SAAA,CAAAtE,UACEH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oCAAmCC,SAAA,EAChDH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,wBAGzDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAC,gCAGvCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,OACLO,YAAY,UACZpD,MAAOnB,EACPmE,SAAWlD,GAAMhB,EAAWgB,EAAEG,OAAOD,OACrCpC,UAAU,2KAIdF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,mBAGzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SA/UlB,CACpB,aACA,WACA,aACA,aACA,WACA,WA0U6ByF,KAAKC,IAClB7F,EAAAA,EAAAA,MAAA,SAEEE,UAAU,mDAAkDC,SAAA,EAE5DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SAAE0F,KACzC7F,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,QACL9C,KAAK,SACLC,MAAOuD,EACPF,QAAStE,IAAmBwE,EAC5BP,SAAWlD,GAAMd,EAAkBc,EAAEG,OAAOD,OAC5CpC,UAAU,aAEZE,EAAAA,EAAAA,KAAA,OACEF,UAAW,8DACTmB,IAAmBwE,EACf,wBACA,4BACH1F,SAEFkB,IAAmBwE,IAClBzF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+GArBhB2F,WA6BbzF,EAAAA,EAAAA,KAAA,UACE+E,KAAK,SACLjF,UAAU,iEACV4F,OAAO,SACP7F,QAASA,IAAMQ,EAAa,UAAUN,SACvC,gBAOQ,WAAdK,IACCJ,EAAAA,EAAAA,KAAAqE,EAAAA,SAAA,CAAAtE,UACEH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qCAAoCC,SAAA,EACjDH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,aAGzDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAC,oCAKvCH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,mBAGzDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAnYf,CACvB,gBACA,aACA,aACA,YAgYgCyF,KAAKC,IACrB7F,EAAAA,EAAAA,MAAA,SAEEE,UAAU,mDAAkDC,SAAA,EAE5DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SAAE0F,KACzC7F,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,QACL9C,KAAK,SACLC,MAAOuD,EACPF,QAASpE,IAAsBsE,EAC/BP,SAAWlD,GAAMZ,EAAqBY,EAAEG,OAAOD,OAC/CpC,UAAU,aAEZE,EAAAA,EAAAA,KAAA,OACEF,UAAW,8DACTqB,IAAsBsE,EAClB,wBACA,4BACH1F,SAEFoB,IAAsBsE,IACrBzF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+GArBhB2F,WA6BbzF,EAAAA,EAAAA,KAAA,UACE+E,KAAK,SACLjF,UAAU,iEACVD,QAASA,IAAMQ,EAAa,UAAUN,SACvC,gBAOQ,WAAdK,IACCJ,EAAAA,EAAAA,KAAAqE,EAAAA,SAAA,CAAAtE,UACEH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gDAA+CC,SAAA,EAC5DH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,2BAGzDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAC,gCAIvCH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,kBAGzDH,EAAAA,EAAAA,MAAA,KAAGE,UAAU,qBAAoBC,SAAA,CAAC,SAAEsB,EAAY,aAChDrB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,QACLY,IAAI,KACJC,IAAI,OACJ1D,MAAOb,EACP6D,SAAWlD,GAAMV,EAAeuE,OAAO7D,EAAEG,OAAOD,QAChDpC,UAAU,0EACVkF,GAAG,wBAMTpF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMC,SAAA,EACnBH,EAAAA,EAAAA,MAAA,SAAOE,UAAU,wDAAuDC,SAAA,EACtEH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wCAAuCC,SAAC,oCAGtDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAC,sFAKvCH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,QACL9C,KAAK,WACLC,MAAM,YACNqD,QAAwB,cAAf9D,EACTyD,SAAWlD,GAAMN,EAAcM,EAAEG,OAAOD,OACxCpC,UAAU,aAEZE,EAAAA,EAAAA,KAAA,OACEF,UAAW,8DACM,cAAf2B,EACI,wBACA,4BACH1B,SAEa,cAAf0B,IACCzB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iHAMvBF,EAAAA,EAAAA,MAAA,SAAOE,UAAU,mDAAkDC,SAAA,EACjEH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wCAAuCC,SAAC,kBAGtDH,EAAAA,EAAAA,MAAA,KAAGE,UAAU,6BAA4BC,SAAA,CACtCwB,EAAS,YAEZvB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,QACLY,IAAI,IACJC,IAAI,KACJ1D,MAAOX,EACP2D,SAAWlD,GAAMR,EAAYqE,OAAO7D,EAAEG,OAAOD,QAC7CpC,UAAW,2GAMjBF,EAAAA,EAAAA,MAAA,SAAOE,UAAU,wDAAuDC,SAAA,EACtEC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,QACL9C,KAAK,WACLC,MAAM,MACNqD,QAAwB,QAAf9D,EACTyD,SAAWlD,GAAMN,EAAcM,EAAEG,OAAOD,OACxCpC,UAAU,aAEZE,EAAAA,EAAAA,KAAA,OACEF,UAAW,8DACM,QAAf2B,EACI,wBACA,4BACH1B,SAEa,QAAf0B,IACCzB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oHAQzBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iCAAgCC,SAAA,EAC7CH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wCAAuCC,SAAC,eAGxDH,EAAAA,EAAAA,MAAA,QAAME,UAAU,wCAAuCC,SAAA,CAAC,SACrC,QAAf0B,EAAuBE,EAAc,GAAGN,IAAe,IACzC,QAAfI,EAAuB,cAAgB,eAG5C7B,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SAAC,qBACxCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SACpC6B,WAKP5B,EAAAA,EAAAA,KAAA,UAAQF,UAAU,+GAA8GC,SAAC,yBAOrI,EAIJ+F,EAAUC,IAA2B,IAA1B,iBAAEpG,GAAkBoG,EACnC,MAAOC,EAASC,IAAczF,EAAAA,EAAAA,UAAS,CACrC0F,SAAU,GACVC,YAAa,GACblE,KAAM,GACNmE,MAAO,GACP1G,MAAO,GACP2G,KAAM,GACNC,SAAU,GACVC,MAAO,GACP1F,YAAa,GACbC,SAAU,MAELyD,EAAeiC,IAAoBhG,EAAAA,EAAAA,UAAS,MAE7CiG,EAAuBzE,IAC3B,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1B8D,GAAY7D,IAAI,IAAWA,EAAM,CAACH,GAAOC,KAAS,EAY9CwE,EAAa,CACjB,CACEzE,KAAM,cACN0E,cAAe,CAAC,SAAU,SAAU,WAEtC,CACE1E,KAAM,WACN0E,cAAe,CAAC,MAAO,QAAS,SAElC,CACE1E,KAAM,OACN0E,cAAe,CAAC,YAAa,QAAS,gBAIpCC,EAAa,CACjB,CACE3E,KAAM,UACN4E,OAAQ,CACN,CACE5E,KAAM,YACN6E,UAAW,CAAC,SAAU,SAAU,WAElC,CACE7E,KAAM,QACN6E,UAAW,CAAC,SAAU,SAAU,WAElC,CACE7E,KAAM,WACN6E,UAAW,CAAC,SAAU,aAI5B,CACE7E,KAAM,cACN4E,OAAQ,CACN,CACE5E,KAAM,SACN6E,UAAW,CAAC,SAAU,WAExB,CACE7E,KAAM,OACN6E,UAAW,CAAC,SAAU,WAExB,CACE7E,KAAM,SACN6E,UAAW,CAAC,SAAU,cAMxBC,EAAsBL,EAAWM,MACpCC,GAAMA,EAAEhF,OAAS+D,EAAQE,WAEtBS,EAAgBI,EAClBA,EAAoBJ,cACpB,GAEEO,EAAmBN,EAAWI,MAAMG,GAAMA,EAAElF,OAAS+D,EAAQO,QAC7DM,EAASK,EAAmBA,EAAiBL,OAAS,GAEtDO,EAAkBP,EAAOG,MAAMC,GAAMA,EAAEhF,OAAS+D,EAAQK,OACxDS,EAAYM,EAAkBA,EAAgBN,UAAY,GAuDhE,OACE9G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+DAA8DC,UAC3EH,EAAAA,EAAAA,MAAA,QAAMyC,SAvDkBC,UAC1BN,EAAEO,iBACFW,QAAQS,IAAIqC,GAGZ,IAAK,IAADqB,EACF,MAAM5E,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,eAC7CC,EAAmB,OAAVL,QAAU,IAAVA,GAAgB,QAAN4E,EAAV5E,EAAYM,YAAI,IAAAsE,OAAN,EAAVA,EAAkBrE,IAEjC,IAAIC,EAAW,GAEf,IAAKsB,EAEH,YADArB,QAAQC,KAAK,gDAKf,GAAIoB,GAAiBA,aAAyBnB,KAAM,CAClD,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQgB,GAExB,MAAMf,QAAkBC,EAAAA,EAAU9C,KAAK,UAAW0C,EAAU,CAC1DK,QAAS,CAAE,eAAgB,yBAI7B,GAFAR,QAAQS,IAAIH,EAAW,aAEV,OAATA,QAAS,IAATA,IAAAA,EAAWI,QAGb,MAAM,IAAIC,MAAM,uBAFhBZ,EAAoB,OAATO,QAAS,IAATA,OAAS,EAATA,EAAWM,OAI1B,CAGA,MAAMC,EAAU,IACXiC,EACHI,MAAOP,OAAOG,EAAQI,OACtBtD,OAAQA,EACRkB,MAAOf,GAETC,QAAQS,IAAII,EAAS,WAErB,MAAME,QAAYR,EAAAA,EAAU9C,KAAK,kBAAmBoD,GAEpDb,QAAQS,IAAI,mBAAoBM,EAAIC,MACpCvE,GAAiB,EAGnB,CAAE,MAAOwE,GACPjB,QAAQkB,MAAM,0BAA2BD,EAC3C,GAKuCrE,UAAU,YAAWC,SAAA,EACxDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAAC,qBAGtCH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,sBAGlDH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBC,SAAA,EAC9BH,EAAAA,EAAAA,MAAA,UACEqC,KAAK,WACLC,MAAO8D,EAAQE,SACfhB,SAAUuB,EACV3G,UAAU,8HACVwH,MAAO,CAAEC,gBAAiB,WAAYxH,SAAA,EAGtCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBACP2G,EAAWlB,KAAKyB,IACfjH,EAAAA,EAAAA,KAAA,UAAqBkC,MAAO+E,EAAEhF,KAAKlC,SAChCkH,EAAEhF,MADQgF,EAAEhF,YAQnBjC,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,CACV1H,UAAU,wFACV+E,KAAM,YAMZjF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,kBAElDH,EAAAA,EAAAA,MAAA,UACEqC,KAAK,cACLC,MAAO8D,EAAQG,YACfjB,SAAUuB,EACV3G,UAAU,8HACVwH,MAAO,CAAEC,gBAAiB,WAAYxH,SAAA,EAGtCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,wBACP4G,EAAcnB,KAAKiC,IAClBzH,EAAAA,EAAAA,KAAA,UAAkBkC,MAAOuF,EAAI1H,SAC1B0H,GADUA,SAOjBzH,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,CACV1H,UAAU,2FACV+E,KAAM,SAKVjF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,kBAClDC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,OACLO,YAAY,qBACZrD,KAAK,OACLC,MAAO8D,EAAQ/D,KACfiD,SAAUuB,EACV3G,UAAU,wGACVwH,MAAO,CAAEC,gBAAiB,iBAK9BvH,EAAAA,EAAAA,KAAA,OAAAD,UACEH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBC,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,sCAAqCC,SAAC,0BAKvDH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBC,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8DAA6DC,SACzEwE,GACCvE,EAAAA,EAAAA,KAAA,OACEsE,IAC2B,kBAAlBC,EACHA,EACAC,IAAIC,gBAAgBF,GAE1BG,IAAI,UACJ5E,UAAU,gCAGZE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAKnBF,EAAAA,EAAAA,MAAA,SACE+E,QAAQ,SACR7E,UAAU,gFAA+EC,SAAA,EAEzFC,EAAAA,EAAAA,KAAC4E,EAAAA,EAAM,CAACC,KAAM,GAAIC,MAAM,WACxB9E,EAAAA,EAAAA,KAAA,SACE+E,KAAK,OACLC,GAAG,SACHC,OAAO,UACPnF,UAAU,SACVoF,SAlPkBlD,IAChC,MAAMmD,EAAOnD,EAAEG,OAAOiD,MAAM,GACxBD,GAEFqB,EAAiBrB,EACnB,gBAqPIvF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,mBAGlDC,EAAAA,EAAAA,KAAA,SACE+E,KAAK,OACLO,YAAY,cACZrD,KAAK,QACLC,MAAO8D,EAAQI,MACflB,SAAUuB,EACV3G,UAAU,wGACVwH,MAAO,CAAEC,gBAAiB,iBAK9B3H,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,mBAIlDH,EAAAA,EAAAA,MAAA,UACEqC,KAAK,QACLC,MAAO8D,EAAQtG,MACfwF,SAAUuB,EACV3G,UAAU,8HACVwH,MAAO,CAAEC,gBAAiB,WAAYxH,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBACRC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UACRC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,QACRC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAGVC,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,CACV1H,UAAU,2FACV+E,KAAM,SAKVjF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,WAElDH,EAAAA,EAAAA,MAAA,UACEqC,KAAK,QACLC,MAAO8D,EAAQO,MACfrB,SAAUuB,EACV3G,UAAU,8HACVwH,MAAO,CAAEC,gBAAiB,WAAYxH,SAAA,EAGtCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBACP6G,EAAWpB,KAAK2B,IACfnH,EAAAA,EAAAA,KAAA,UAAqBkC,MAAOiF,EAAElF,KAAKlC,SAChCoH,EAAElF,MADQkF,EAAElF,YAOnBjC,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,CACV1H,UAAU,2FACV+E,KAAM,SAKVjF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,eAElDH,EAAAA,EAAAA,MAAA,UACEqC,KAAK,OACLC,MAAO8D,EAAQK,KACfnB,SAAUuB,EACV3G,UAAU,8HACVwH,MAAO,CAAEC,gBAAiB,WAAYxH,SAAA,EAKtCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBACP8G,EAAOrB,KAAKyB,IACXjH,EAAAA,EAAAA,KAAA,UAAqBkC,MAAO+E,EAAEhF,KAAKlC,SAChCkH,EAAEhF,MADQgF,EAAEhF,YAMnBjC,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,CACV1H,UAAU,2FACV+E,KAAM,SAIVjF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,eAElDH,EAAAA,EAAAA,MAAA,UACEqC,KAAK,WACLC,MAAO8D,EAAQM,SACfpB,SAAUuB,EACV3G,UAAU,8HACVwH,MAAO,CAAEC,gBAAiB,WAAYxH,SAAA,EAKtCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBACP+G,EAAUtB,KAAKkC,IACd1H,EAAAA,EAAAA,KAAA,UAAmBkC,MAAOwF,EAAK3H,SAC5B2H,GADUA,SAMjB1H,EAAAA,EAAAA,KAACwH,EAAAA,EAAW,CACV1H,UAAU,2FACV+E,KAAM,SAKVjF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,yBAGlDC,EAAAA,EAAAA,KAAA,YACEiC,KAAK,cACLoD,KAAM,EACNC,YAAY,oBACZpD,MAAO8D,EAAQnF,YACfqE,SAAUuB,EACV3G,UAAU,wGACVwH,MAAO,CAAEC,gBAAiB,iBAK9B3H,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iCAAgCC,SAAC,uBAGlDC,EAAAA,EAAAA,KAAA,YACEiC,KAAK,WACLoD,KAAM,EACNC,YAAY,kBACZpD,MAAO8D,EAAQlF,SACfoE,SAAUuB,EACV3G,UAAU,wGACVwH,MAAO,CAAEC,gBAAiB,iBAK9BvH,EAAAA,EAAAA,KAAA,UACE+E,KAAK,SACLjF,UAAU,mEACVC,SACD,eAIC,EAGV,EA9/CuB4H,KACrB,MAAOpD,EAAeiC,IAAoBhG,EAAAA,EAAAA,UAAS,OAC5CoH,EAAejI,IAAoBa,EAAAA,EAAAA,WAAS,IAC5CqH,EAAYC,IAAiBtH,EAAAA,EAAAA,WAAS,IACtCuH,EAAaC,IAAkBxH,EAAAA,EAAAA,WAAS,IACxCJ,EAAWC,IAAgBG,EAAAA,EAAAA,UAAS,KACpCwF,EAASC,IAAczF,EAAAA,EAAAA,UAAS,CACrC0F,SAAU,GACVjE,KAAM,GACNmE,MAAO,GACP1G,MAAO,GACP4G,SAAU,GACVD,KAAM,GACNxF,YAAa,GACbC,SAAU,GACVmH,MAAO,OAEHC,EAAgB,CACpB,CACElD,GAAI,EACJmD,SAAU,SACVC,UAAWrF,EACXsF,UAAWC,EACXC,MAAO,GACP1H,YACE,uHACF2H,SAAU,mBAEZ,CACExD,GAAI,EACJmD,SAAU,SACVC,UAAWrF,EACXsF,UAAWI,EACXF,MAAO,GACP1H,YACE,uHACF2H,SAAU,sBAEZ,CACExD,GAAI,EACJmD,SAAU,SACVC,UAAWrF,EACXsF,UAAWK,EACXH,MAAO,GACP1H,YACE,uHACF2H,SAAU,cAEZ,CACExD,GAAI,EACJmD,SAAU,SACVC,UAAWrF,EACXsF,UAAWM,EACXJ,MAAO,GACP1H,YACE,uHACF2H,SAAU,kBAsHd,OA8JExI,EAAAA,EAAAA,KAAAqE,EAAAA,SAAA,CAAAtE,UACEH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,6CAA4CC,SAAA,EACxDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,UAC7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,SACnB6H,GAGA5H,EAAAA,EAAAA,KAAC8F,EAAO,CAACnG,iBAAkBA,KAF3BK,EAAAA,EAAAA,KAACR,EAAU,CAACE,MAAM,kBAAkBC,iBAAkBA,SAOxDK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,UACxCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACL,IAAf8H,GACC7H,EAAAA,EAAAA,KAACR,EAAU,CACTE,MAAM,cACNC,iBAAkBmI,KAGpB9H,EAAAA,EAAAA,KAACC,EAAW,CACVE,YAAa2H,EACb1H,UAAWA,EACXC,aAAcA,SAMtBL,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,SAEtCgI,GAwGA/H,EAAAA,EAAAA,KAACC,EAAW,CACVE,YAAa2H,EACb1H,UAAWA,EACXC,aAAcA,KA1GhBL,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qCAAoCC,UACjDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yDAAwDC,SACpEmI,EAAc1C,KAAKoD,IAClBhJ,EAAAA,EAAAA,MAAA,OAEEE,UAAU,+EAA8EC,SAAA,EAGxFH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCC,SAAA,EACpDH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBC,SAAA,EAChCH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CACLnE,IAAKkE,EAAKT,SACV7D,IAAKsE,EAAKR,UACVU,GAAI,CACFC,MAAO,GACPC,OAAQ,GACRC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,MAGZpJ,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CACLnE,IAAKkE,EAAKT,SACV7D,IAAKsE,EAAKR,UACVU,GAAI,CACFC,MAAO,GACPC,OAAQ,GACRC,SAAU,WACVC,KAAM,EACNC,KAAM,GACNE,OAAQ,yBAIdzJ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SACtC6I,EAAKT,YAERnI,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wCAAuCC,SAAC,+BAMzDC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,iCAAgCC,UAChDC,EAAAA,EAAAA,KAACsJ,EAAAA,EAAc,CAACzE,KAAM,WAK1B7E,EAAAA,EAAAA,KAAA,OACEsE,IAAKsE,EAAKP,UACV3D,IAAKkE,EAAKJ,SACV1I,UAAU,gCACVwH,MAAO,CAAEiC,aAAc,WAIzB3J,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8CAA6CC,SAAA,EAC1DH,EAAAA,EAAAA,MAAA,UAAQE,UAAU,mEAAkEC,SAAA,EAClFC,EAAAA,EAAAA,KAACwJ,EAAAA,EAAK,CAAC3E,KAAM,GAAI/E,UAAU,mBAC3BE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,cAGzBH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,0BAAyBC,UACzCC,EAAAA,EAAAA,KAAA,OACEsE,IAAKmF,EAAAA,EACL/E,IAAI,WACJ5E,UAAU,yBAGdE,EAAAA,EAAAA,KAAA,UACEF,UAAU,iDACVwH,MAAO,CACLoC,WAAY,sBACZC,WAAY,UACZ5J,SACH,aAGDC,EAAAA,EAAAA,KAAA,UACEF,UAAU,+DACVwH,MAAO,CACLoC,WAAY,sBACZC,WAAY,UAEd9J,QAASA,KACPmI,GAAe,GACf3H,EAAa,SAAS,EACtBN,SACH,kBAzFA6I,EAAK5D,gBA2GvB,C","sources":["pages/ProductListing/ProductListing.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport {\r\n  ChevronDown,\r\n  Heart,\r\n  MoreHorizontal,\r\n  Plus,\r\n  PlusCircle,\r\n  Upload,\r\n} from \"lucide-react\";\r\nimport axiosMain from \"../utils/axiosMain\";\r\nimport { toast } from \"react-toastify\"; // Import toast for notifications\r\nimport ellipse from \"../../asset/Product/Ellipse 2.png\";\r\nimport rectangle1 from \"../../asset/Product/Rectangle1.png\";\r\nimport rectangle2 from \"../../asset/Product/Rectangle2.png\";\r\nimport rectangle3 from \"../../asset/Product/Rectangle3.png\";\r\nimport rectangle4 from \"../../asset/Product/Rectangle4.png\";\r\nimport rectangle5 from \"../../asset/Product/Rectangle5.png\";\r\nimport rectangle6 from \"../../asset/Product/Rectangle6.png\";\r\nimport rectangle7 from \"../../asset/Product/Rectangle7.png\";\r\nimport rectangle8 from \"../../asset/Product/Rectangle8.png\";\r\nimport user from \"../../asset/user.png\";\r\nimport book from \"../../asset/book.png\";\r\nimport shoes from \"../../asset/shoes.png\";\r\nimport teddy from \"../../asset/teddy.png\";\r\nimport train from \"../../asset/train.png\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport save from \"../../asset/SVG/save.svg\";\r\n\r\nconst ProductListing = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [producttoggle, setProductToggle] = useState(false);\r\n  const [posttoggle, setPostToggle] = useState(false);\r\n  const [boostToggle, setBoostToggle] = useState(false);\r\n  const [modalName, setModalName] = useState(\"\");\r\n  const [product, setProduct] = useState({\r\n    category: \"\",\r\n    name: \"\",\r\n    price: \"\",\r\n    label: \"\",\r\n    areaCode: \"\",\r\n    city: \"\",\r\n    description: \"\",\r\n    keywords: \"\",\r\n    photo: null,\r\n  });\r\n  const categoryCards = [\r\n    {\r\n      id: 1,\r\n      username: \"Candle\",\r\n      userImage: user,\r\n      mainImage: shoes,\r\n      likes: 45,\r\n      description:\r\n        \"Whenever it contains whatever it that ends up an interference it drags the formation whatever it drags the formation\",\r\n      imageAlt: \"Yellow sneakers\",\r\n    },\r\n    {\r\n      id: 2,\r\n      username: \"Candle\",\r\n      userImage: user,\r\n      mainImage: book,\r\n      likes: 32,\r\n      description:\r\n        \"Whenever it contains whatever it that ends up an interference it drags the formation whatever it drags the formation\",\r\n      imageAlt: \"Notebook with pens\",\r\n    },\r\n    {\r\n      id: 3,\r\n      username: \"Candle\",\r\n      userImage: user,\r\n      mainImage: train,\r\n      likes: 67,\r\n      description:\r\n        \"Whenever it contains whatever it that ends up an interference it drags the formation whatever it drags the formation\",\r\n      imageAlt: \"Teddy bear\",\r\n    },\r\n    {\r\n      id: 4,\r\n      username: \"Candle\",\r\n      userImage: user,\r\n      mainImage: teddy,\r\n      likes: 89,\r\n      description:\r\n        \"Whenever it contains whatever it that ends up an interference it drags the formation whatever it drags the formation\",\r\n      imageAlt: \"Colorful toys\",\r\n    },\r\n  ];\r\n\r\n  // Handle text inputs\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProduct({ ...product, [name]: value });\r\n  };\r\n\r\n  // Handle image selection\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      const imageUrl = URL.createObjectURL(file);\r\n      setSelectedImage(imageUrl);\r\n      setProduct((prev) => ({ ...prev, photo: file })); // Save file in state\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const userDetail = JSON.parse(localStorage.getItem(\"userDetail\")); // Get stored user data\r\n    const userId = userDetail?.user?._id; // ✅ Correctly access user ID\r\n\r\n    if (!userId) {\r\n      toast.error(\"User ID not found! Plese log in again.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    for (const key in product) {\r\n      formData.append(key, product[key]);\r\n    }\r\n\r\n    // if (selectedImage) {\r\n    //   formData.append(\"photo\", product.photo);\r\n    // }\r\n\r\n    formData.append(\"createdBy\", userId); // Attach user ID\r\n\r\n    axiosMain\r\n      .post(\"https://waaro.in/api/upload-product\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n      .then((res) => {\r\n        if (res.success) {\r\n          toast.success(res.message);\r\n        } else {\r\n          toast.error(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error:\", err);\r\n        toast.error(\"Something went wrong!\");\r\n      });\r\n  };\r\n\r\n  const posts = [\r\n    {\r\n      id: 1,\r\n      name: \"Camila\",\r\n      location: \"Mexico City, Mexico\",\r\n      image: rectangle1,\r\n      icon: ellipse,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Camila\",\r\n      location: \"Mexico City, Mexico\",\r\n      image: rectangle2,\r\n      icon: ellipse,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Camila\",\r\n      location: \"Mexico City, Mexico\",\r\n      image: rectangle3,\r\n      icon: ellipse,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Camila\",\r\n      location: \"Mexico City, Mexico\",\r\n      image: rectangle4,\r\n      icon: ellipse,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Camila\",\r\n      location: \"Mexico City, Mexico\",\r\n      image: rectangle5,\r\n      icon: ellipse,\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Camila\",\r\n      location: \"Mexico City, Mexico\",\r\n      image: rectangle6,\r\n      icon: ellipse,\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Camila\",\r\n      location: \"Mexico City, Mexico\",\r\n      image: rectangle7,\r\n      icon: ellipse,\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Camila\",\r\n      location: \"Mexico City, Mexico\",\r\n      image: rectangle8,\r\n      icon: ellipse,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    // <div className=\"bg-white px-2 py-4\">\r\n    //   <div className=\"mt-4 w-50 w-md-75 w-sm-100\">\r\n    //     <h3 className=\"mb-4 product-title\">Product Listing</h3>\r\n    //     <Form onSubmit={handleSubmit} className=\"d-grid gap-2\">\r\n    //       <Form.Group controlId=\"category\" className=\"mb-3\">\r\n    //         <Form.Label>Product Category</Form.Label>\r\n    //         <Form.Control\r\n    //           type=\"text\"\r\n    //           placeholder=\"Enter Product Category\"\r\n    //           name=\"category\"\r\n    //           className=\"border border-dark\"\r\n    //           value={product.category}\r\n    //           onChange={handleChange}\r\n    //         />\r\n    //       </Form.Group>\r\n\r\n    //       <Row className=\"gap-2\">\r\n    //         <Col>\r\n    //           <Form.Group controlId=\"name\" className=\"mb-3\">\r\n    //             <Form.Label>Product Name</Form.Label>\r\n    //             <Form.Control\r\n    //               type=\"text\"\r\n    //               placeholder=\"Enter Product Name\"\r\n    //               name=\"name\"\r\n    //               value={product.name}\r\n    //               onChange={handleChange}\r\n    //               className=\"border border-dark\"\r\n    //             />\r\n    //           </Form.Group>\r\n    //         </Col>\r\n    //         <Col>\r\n    //           <Form.Group controlId=\"photo\" className=\"mb-3\">\r\n    //             <Form.Label>Upload Product Photo</Form.Label>\r\n    //             <div className=\"d-flex align-items-center\">\r\n    //               <div\r\n    //                 className=\"preview-box border border-dark me-2\"\r\n    //                 style={{ width: \"20%\", height: \"40px\" }}\r\n    //               >\r\n    //                 {selectedImage && (\r\n    //                   <img\r\n    //                     src={selectedImage}\r\n    //                     alt=\"Product preview\"\r\n    //                     className=\"preview-image\"\r\n    //                   />\r\n    //                 )}\r\n    //               </div>\r\n    //               <label htmlFor=\"product-photo\" className=\"upload-btn\">\r\n    //                 <Upload className=\"icon\" />\r\n    //                 <input\r\n    //                   id=\"product-photo\"\r\n    //                   type=\"file\"\r\n    //                   accept=\"image/*\"\r\n    //                   className=\"file-input\"\r\n    //                   onChange={handleImageUpload}\r\n    //                 />\r\n    //               </label>\r\n    //             </div>\r\n    //           </Form.Group>\r\n    //         </Col>\r\n    //       </Row>\r\n\r\n    //       <Row className=\"gap-2\">\r\n    //         <Col>\r\n    //           <Form.Group controlId=\"price\" className=\"mb-3\">\r\n    //             <Form.Label>Product Price</Form.Label>\r\n    //             <Form.Control\r\n    //               type=\"text\"\r\n    //               placeholder=\"Enter Price\"\r\n    //               name=\"price\"\r\n    //               value={product.price}\r\n    //               className=\"border border-dark\"\r\n    //               onChange={handleChange}\r\n    //             />\r\n    //           </Form.Group>\r\n    //         </Col>\r\n    //         <Col>\r\n    //           <Form.Group controlId=\"label\" className=\"mb-3\">\r\n    //             <Form.Label>Product Label</Form.Label>\r\n    //             <Form.Select\r\n    //               name=\"label\"\r\n    //               className=\"border border-dark\"\r\n    //               value={product.label}\r\n    //               onChange={handleChange}\r\n    //             >\r\n    //               <option>Unit</option>\r\n    //               <option>Kg</option>\r\n    //               <option>Piece</option>\r\n    //             </Form.Select>\r\n    //           </Form.Group>\r\n    //         </Col>\r\n    //       </Row>\r\n\r\n    //       <Row className=\"gap-2\">\r\n    //         <Col>\r\n    //           <Form.Group controlId=\"areaCode\" className=\"mb-3\">\r\n    //             <Form.Label>Area Code</Form.Label>\r\n    //             <Form.Select\r\n    //               name=\"areaCode\"\r\n    //               value={product.areaCode}\r\n    //               onChange={handleChange}\r\n    //               className=\"border border-dark\"\r\n    //             >\r\n    //               <option>Select Area Code</option>\r\n    //               <option>123</option>\r\n    //               <option>456</option>\r\n    //             </Form.Select>\r\n    //           </Form.Group>\r\n    //         </Col>\r\n    //         <Col>\r\n    //           <Form.Group controlId=\"city\" className=\"mb-3\">\r\n    //             <Form.Label>City</Form.Label>\r\n    //             <Form.Select\r\n    //               name=\"city\"\r\n    //               value={product.city}\r\n    //               className=\"border border-dark\"\r\n    //               onChange={handleChange}\r\n    //             >\r\n    //               <option>Select City</option>\r\n    //               <option>New York</option>\r\n    //               <option>Los Angeles</option>\r\n    //             </Form.Select>\r\n    //           </Form.Group>\r\n    //         </Col>\r\n    //       </Row>\r\n\r\n    //       <Form.Group controlId=\"description\" className=\"mb-3\">\r\n    //         <Form.Label>Product Description</Form.Label>\r\n    //         <Form.Control\r\n    //           as=\"textarea\"\r\n    //           rows={3}\r\n    //           placeholder=\"Enter Description (Minimum 25 words)\"\r\n    //           name=\"description\"\r\n    //           className=\"border border-dark\"\r\n    //           value={product.description}\r\n    //           onChange={handleChange}\r\n    //         />\r\n    //       </Form.Group>\r\n\r\n    //       <Form.Group controlId=\"keywords\" className=\"mb-3\">\r\n    //         <Form.Label>Product Keywords</Form.Label>\r\n    //         <Form.Control\r\n    //           as=\"textarea\"\r\n    //           rows={3}\r\n    //           className=\"border border-dark\"\r\n    //           placeholder=\"Enter Keywords (Minimum 25 words)\"\r\n    //           name=\"keywords\"\r\n    //           value={product.keywords}\r\n    //           onChange={handleChange}\r\n    //         />\r\n    //       </Form.Group>\r\n\r\n    //       <Button variant=\"dark\" type=\"submit\" className=\"mt-3 w-100\">\r\n    //         Submit\r\n    //       </Button>\r\n    //     </Form>\r\n    //   </div>\r\n    // </div>\r\n    <>\r\n      <div className=\"container mx-auto  grid grid-cols-12 gap-6\">\r\n         <div className=\"col-span-12 md:col-span-3\">\r\n      <div className=\"w-full\">\r\n        {!producttoggle ? (\r\n          <UploadCard label=\"Upload Products\" setProductToggle={setProductToggle} />\r\n        ) : (\r\n          <Product setProductToggle={setProductToggle} />\r\n        )}\r\n      </div>\r\n    </div>\r\n\r\n        <div className=\"col-span-12 md:col-span-3\">\r\n          <div className=\"w-full\">\r\n            {posttoggle === false ? (\r\n              <UploadCard\r\n                label=\"Upload Post\"\r\n                setProductToggle={setPostToggle}\r\n              />\r\n            ) : (\r\n              <UploadPosts\r\n                handleClose={setPostToggle}\r\n                modalName={modalName}\r\n                setModalName={setModalName}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-span-12 md:col-span-6\">\r\n          {/* White background container box */}\r\n          {!boostToggle ? (\r\n            <div className=\"bg-white p-4 rounded-xl shadow-md \">\r\n              <div className=\"grid grid-cols-2 gap-y-2 gap-x-4 max-w-[500px] mx-auto\">\r\n                {categoryCards.map((card) => (\r\n                  <div\r\n                    key={card.id}\r\n                    className=\"bg-white rounded-xl shadow hover:shadow-md transition duration-200 w-[230px]\"\r\n                  >\r\n                    {/* Header */}\r\n                    <div className=\"flex justify-between items-center p-2\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"relative w-10 h-10\">\r\n                          <Avatar\r\n                            alt={card.username}\r\n                            src={card.userImage}\r\n                            sx={{\r\n                              width: 30,\r\n                              height: 30,\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              left: 0,\r\n                              zIndex: 1,\r\n                            }}\r\n                          />\r\n                          <Avatar\r\n                            alt={card.username}\r\n                            src={card.userImage}\r\n                            sx={{\r\n                              width: 25,\r\n                              height: 25,\r\n                              position: \"absolute\",\r\n                              top: -5,\r\n                              left: 20,\r\n                              border: \"2px solid white\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"ml-3\">\r\n                          <p className=\"text-sm font-semibold mb-0\">\r\n                            {card.username}\r\n                          </p>\r\n                          <p className=\"text-xs text-gray-500 mb-0 text-[9px]\">\r\n                            Mexico City, Mexico\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <button className=\"text-gray-500 hover:text-black\">\r\n                        <MoreHorizontal size={20} />\r\n                      </button>\r\n                    </div>\r\n\r\n                    {/* Image */}\r\n                    <img\r\n                      src={card.mainImage}\r\n                      alt={card.imageAlt}\r\n                      className=\"w-full h-45 object-scale-down\"\r\n                      style={{ borderRadius: \"15px\" }}\r\n                    />\r\n\r\n                    {/* Body */}\r\n                    <div className=\"flex items-center justify-between px-2 mb-2\">\r\n                      <button className=\"flex items-center px-2 py-1 rounded-full bg-gray-200 text-[10px]\">\r\n                        <Heart size={12} className=\"text-gray-700\" />\r\n                        <span className=\"ml-1\">5.44k</span>\r\n                      </button>\r\n\r\n                      <div className=\"flex items-center gap-1\">\r\n                        <button className=\"p-1 rounded bg-gray-100\">\r\n                          <img\r\n                            src={save}\r\n                            alt=\"Bookmark\"\r\n                            className=\"w-[12px] h-[12px]\"\r\n                          />\r\n                        </button>\r\n                        <button\r\n                          className=\"px-1.5 py-[2px] rounded text-black text-[10px]\"\r\n                          style={{\r\n                            fontFamily: \"Poppins, sans-serif\",\r\n                            lineHeight: \"normal\",\r\n                          }}\r\n                        >\r\n                          Connect\r\n                        </button>\r\n                        <button\r\n                          className=\"px-1.5 py-[2px] rounded bg-yellow-500 text-black text-[10px]\"\r\n                          style={{\r\n                            fontFamily: \"Poppins, sans-serif\",\r\n                            lineHeight: \"normal\",\r\n                          }}\r\n                          onClick={() => {\r\n                            setBoostToggle(true);\r\n                            setModalName(\"Modal1\");\r\n                          }}\r\n                        >\r\n                          Boost\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <UploadPosts\r\n              handleClose={setPostToggle}\r\n              modalName={modalName}\r\n              setModalName={setModalName}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nfunction UploadCard({ label, setProductToggle }) {\r\n  return (\r\n     <div\r\n      onClick={() => setProductToggle(true)}\r\n      className=\"bg-white w-full h-60 rounded-xl border flex flex-col justify-center items-center shadow hover:shadow-md cursor-pointer transition\"\r\n    >\r\n      <div className=\"flex items-center justify-center w-[60px] h-[60px] rounded-lg bg-yellow-400 border border-black\">\r\n        <span className=\"text-black text-4xl font-medium leading-none\">+</span>\r\n      </div>\r\n      <p className=\"mt-3 font-medium text-gray-700\">{label}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst UploadPosts = ({ handleClose, modalName, setModalName }) => {\r\n  const [selectedImagePost, setSelectedImagePost] = useState(null);\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const [post, setPost] = useState({\r\n    // category: \"\",\r\n    // subCategory: \"\",\r\n    // name: \"\",\r\n    // price: \"\",\r\n    // label: \"\",\r\n    // city: \"\",\r\n    // areaCode: \"\",\r\n    // state: \"\",\r\n    description: \"\",\r\n    keywords: \"\",\r\n  });\r\n\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [selectedAction, setSelectedAction] = useState(\"Learn More\");\r\n  const [selectedActionMsg, setSelectedActionMsg] = useState(\"Sent Massgage\");\r\n\r\n  const [dailyBudget, setDailyBudget] = useState(149);\r\n  const [duration, setDuration] = useState(6);\r\n  const [budgetType, setBudgetType] = useState(\"unlimited\");\r\n\r\n  const totalBudget = dailyBudget * duration;\r\n  const estimatedReach = `${Math.floor(dailyBudget * 11.4)}-${Math.floor(\r\n    dailyBudget * 30.9\r\n  )}`;\r\n\r\n  const actionButtons = [\r\n    \"Learn More\",\r\n    \"shop now\",\r\n    \"watch more\",\r\n    \"Contact us\",\r\n    \"Book now\",\r\n    \"Sign up\",\r\n  ];\r\n  const actionButtonsMsg = [\r\n    \"Sent Massgage\",\r\n    \"Contact us\",\r\n    \"Learn More\",\r\n    \"Book Now\",\r\n  ];\r\n\r\n  const postImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setSelectedImagePost(file);\r\n    }\r\n  };\r\n  const posthandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPost((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const posthandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // axiosMain.post(\"api/create-post\",)\r\n\r\n    try {\r\n      const userDetail = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n      const userId = userDetail?.user?._id;\r\n\r\n      let imageUrl = \"\";\r\n\r\n      if (!selectedImagePost) {\r\n        console.warn(\"No image selected. Product creation aborted.\");\r\n        return;\r\n      }\r\n\r\n      // 1️⃣ Upload image first if selectedImage is a File\r\n      if (selectedImagePost && selectedImagePost instanceof File) {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedImagePost);\r\n\r\n        const uploadRes = await axiosMain.post(\"/upload\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n        console.log(uploadRes, \"uploadRes\");\r\n\r\n        if (uploadRes?.success) {\r\n          imageUrl = uploadRes?.fileUrl;\r\n        } else {\r\n          throw new Error(\"Image upload failed\");\r\n        }\r\n      }\r\n      debugger;\r\n      // 2️⃣ Then create product\r\n      const payload = {\r\n        ...post,\r\n        // price: Number(product.price),\r\n        userId: userId,\r\n        image: imageUrl,\r\n      };\r\n      console.log(payload, \"payload\");\r\n\r\n      const res = await axiosMain.post(\"/create-post\", payload);\r\n      console.log(\"Product created:\", res.data);\r\n\r\n      // Optional: success message or reset form here\r\n    } catch (err) {\r\n      console.error(\"Error creating product:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-sm mx-auto bg-white p-4 rounded-md shadow font-poppins\">\r\n      <form className=\"space-y-4\" onSubmit={posthandleSubmit}>\r\n        {modalName === \"\" && (\r\n          <>\r\n            {\" \"}\r\n            <h2 className=\"text-lg font-semibold\">Upload Post</h2>\r\n            {/* Upload Photo */}\r\n            <div>\r\n              <div className=\"flex items-center gap-2\">\r\n                {/* Label */}\r\n                <label className=\"text-xs font-semibold min-w-[100px]\">\r\n                  Upload Product Photo\r\n                </label>\r\n\r\n                {/* Image + Upload Button */}\r\n                <div className=\"flex items-center gap-2\">\r\n                  {/* Image Preview */}\r\n                  <div className=\"w-10 h-10 overflow-hidden rounded-lg border border-gray-300\">\r\n                    {selectedImagePost ? (\r\n                      <img\r\n                        src={\r\n                          typeof selectedImage === \"string\"\r\n                            ? selectedImagePost\r\n                            : URL.createObjectURL(selectedImagePost)\r\n                        }\r\n                        alt=\"preview\"\r\n                        className=\"w-full h-full object-cover\"\r\n                      />\r\n                    ) : (\r\n                      <div className=\"w-full h-full bg-[#FAFAFA]\" />\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Upload Button */}\r\n                  <label\r\n                    htmlFor=\"upload\"\r\n                    className=\"w-10 h-10 bg-black rounded-lg flex items-center justify-center cursor-pointer\"\r\n                  >\r\n                    <Upload size={20} color=\"white\" />\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"upload\"\r\n                      accept=\"image/*\"\r\n                      className=\"hidden\"\r\n                      onChange={postImageUpload}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              {/* Description */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">\r\n                  Product Description\r\n                </label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  rows={2}\r\n                  placeholder=\"Enter Description\"\r\n                  value={post.description}\r\n                  onChange={posthandleChange}\r\n                  className=\"w-full bg-white border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black\"\r\n                ></textarea>\r\n              </div>\r\n\r\n              {/* Keywords */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">\r\n                  Product Key Wards\r\n                </label>\r\n                <textarea\r\n                  name=\"keywords\"\r\n                  rows={2}\r\n                  placeholder=\"Enter Key wards\"\r\n                  value={post.keywords}\r\n                  onChange={posthandleChange}\r\n                  className=\"w-full bg-white border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black\"\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            {/* Submit */}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-dark w-full rounded-md font-medium  transition\"\r\n            >\r\n              Submit\r\n            </button>\r\n            {/* <button\r\n              type=\"button\"\r\n              className=\"w-full bg-red-500 hover:bg-red-600 text-white py-2 rounded-md font-medium\"\r\n              onClick={() => handleClose(false)}\r\n            >\r\n              Close\r\n            </button> */}\r\n          </>\r\n        )}\r\n      </form>\r\n      <form>\r\n        {modalName === \"Modal1\" && (\r\n          <>\r\n            <div className=\"bg-white rounded-lg p-6\">\r\n              <h2 className=\"text-xl font-bold mb-4\">\r\n                What do you want people to do when they see your ad?\r\n              </h2>\r\n\r\n              <div className=\"space-y-4\">\r\n                <label className=\"flex items-center\">\r\n                  <span className=\"text-sm\">\r\n                    <span className=\"text-heading\">Visit Your Profile</span>\r\n                    <br />\r\n                    <span className=\"text-description\">\r\n                      Best for Brand awareness and connect @wazaro_official\r\n                    </span>\r\n                  </span>\r\n\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"action\"\r\n                    className=\"mr-2 accent-black\"\r\n                  />\r\n                </label>\r\n\r\n                <label className=\"flex items-center\">\r\n                  <span className=\"text-sm\">\r\n                    <span className=\"text-heading\">Visit Your Profile</span>\r\n                    <br />\r\n                    <span className=\"text-description\">\r\n                      Best for online sales, booking and helping people learn\r\n                      more about you\r\n                    </span>\r\n                  </span>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"action\"\r\n                    className=\"mr-2 accent-black \"\r\n                  />\r\n                </label>\r\n\r\n                <label className=\"flex items-center\">\r\n                  <span className=\"text-sm\">\r\n                    <span className=\"text-heading\"> Message you</span>\r\n                    <br />\r\n                    <span className=\"text-description\">\r\n                      Best connecting with more people in wazaro to drive sales\r\n                    </span>\r\n                  </span>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"action\"\r\n                    className=\"mr-2 accent-black\"\r\n                  />\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-dark w-full bg-black  text-white rounded-md font-medium\"\r\n              onClick={() => setModalName(\"Modal2\")}\r\n            >\r\n              Submit\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        {modalName === \"Modal2\" && (\r\n          <>\r\n            <div className=\"bg-white rounded-lg p-6\">\r\n              <h2 className=\"text-xl font-bold mb-4 text-center\">N/A</h2>\r\n              <p className=\"text-sm text-gray-500 mb-4 text-center\">\r\n                Estimated audience size\r\n              </p>\r\n\r\n              <div className=\"space-y-6\">\r\n                <label className=\"flex items-center justify-between cursor-pointer\">\r\n                  <span className=\"text-sm mr-3\">\r\n                    <span className=\"text-heading fs-8\">\r\n                      Use advantage+ audience\r\n                    </span>\r\n                    <br />\r\n                    Automatically finds and updates audience whenever it's\r\n                    likely to improve performance\r\n                  </span>\r\n                  <div className=\"relative\">\r\n                    <div\r\n                      className={`block w-14 h-8 rounded-full transition-colors duration-200 ease-in-out ${\r\n                        isEnabled ? \"bg-blue-600\" : \"bg-gray-300\"\r\n                      }`}\r\n                    >\r\n                      <div\r\n                        className={`absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition-transform duration-200 ease-in-out ${\r\n                          isEnabled ? \"transform translate-x-6\" : \"\"\r\n                        }`}\r\n                      ></div>\r\n                    </div>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"sr-only\"\r\n                      checked={isEnabled}\r\n                      onChange={(e) => setIsEnabled(e.target.checked)}\r\n                    />\r\n                  </div>\r\n                </label>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1 text-heading\">\r\n                    Campaign name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter campaign\"\r\n                    className=\"w-full p-2 border rounded-lg text-sm\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1 text-heading\">\r\n                    Locations\r\n                  </label>\r\n                  <select className=\"w-full p-2 border rounded-lg text-sm text-gray-500\">\r\n                    <option>Gujarat, Rajasthan, Maharashtra</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-dark w-full bg-black text-white rounded-lg font-medium mt-4\"\r\n                  onClick={() => setModalName(\"Modal3\")}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {modalName === \"Modal3\" && (\r\n          <>\r\n            <div className=\"max-w-md mx-auto bg-white p-6 m-4\">\r\n              <div className=\"text-center mb-6\">\r\n                <h1 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n                  Website Goal setup\r\n                </h1>\r\n                <p className=\"text-gray-600 text-sm\">Add url & action button</p>\r\n              </div>\r\n\r\n              <div className=\"mb-6\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Website\"\r\n                  value={website}\r\n                  onChange={(e) => setWebsite(e.target.value)}\r\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400 focus:border-transparent text-gray-700 placeholder-gray-400\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-8\">\r\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n                  Action button\r\n                </h2>\r\n                <div className=\"space-y-3\">\r\n                  {actionButtons.map((action) => (\r\n                    <label\r\n                      key={action}\r\n                      className=\"flex items-center justify-between cursor-pointer\"\r\n                    >\r\n                      <span className=\"text-gray-700 text-sm\">{action}</span>\r\n                      <div className=\"relative\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"action\"\r\n                          value={action}\r\n                          checked={selectedAction === action}\r\n                          onChange={(e) => setSelectedAction(e.target.value)}\r\n                          className=\"sr-only\"\r\n                        />\r\n                        <div\r\n                          className={`w-5 h-5 rounded-full border-2 transition-all duration-200 ${\r\n                            selectedAction === action\r\n                              ? \"border-black bg-black\"\r\n                              : \"border-gray-400 bg-white\"\r\n                          }`}\r\n                        >\r\n                          {selectedAction === action && (\r\n                            <div className=\"w-2 h-2 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-dark w-full bg-black text-white rounded-md font-medium\"\r\n                typeof=\"button\"\r\n                onClick={() => setModalName(\"Modal4\")}\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {modalName === \"Modal4\" && (\r\n          <>\r\n            <div className=\"max-w-md mx-auto bg-white  p-6 m-4\">\r\n              <div className=\"text-center mb-6\">\r\n                <h1 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n                  Message\r\n                </h1>\r\n                <p className=\"text-gray-600 text-sm\">\r\n                  Select app & Call to Action\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"mb-8\">\r\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n                  Action button\r\n                </h2>\r\n                <div className=\"space-y-3\">\r\n                  {actionButtonsMsg.map((action) => (\r\n                    <label\r\n                      key={action}\r\n                      className=\"flex items-center justify-between cursor-pointer\"\r\n                    >\r\n                      <span className=\"text-gray-700 text-sm\">{action}</span>\r\n                      <div className=\"relative\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"action\"\r\n                          value={action}\r\n                          checked={selectedActionMsg === action}\r\n                          onChange={(e) => setSelectedActionMsg(e.target.value)}\r\n                          className=\"sr-only\"\r\n                        />\r\n                        <div\r\n                          className={`w-5 h-5 rounded-full border-2 transition-all duration-200 ${\r\n                            selectedActionMsg === action\r\n                              ? \"border-black bg-black\"\r\n                              : \"border-gray-400 bg-white\"\r\n                          }`}\r\n                        >\r\n                          {selectedActionMsg === action && (\r\n                            <div className=\"w-2 h-2 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-dark w-full bg-black text-white rounded-md font-medium\"\r\n                onClick={() => setModalName(\"Modal5\")}\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {modalName === \"Modal5\" && (\r\n          <>\r\n            <div className=\"max-w-md mx-auto bg-white rounded-2xl p-6 m-4\">\r\n              <div className=\"text-center mb-6\">\r\n                <h1 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n                  What's your ad budget\r\n                </h1>\r\n                <p className=\"text-gray-600 text-sm\">Estimated audience size</p>\r\n              </div>\r\n\r\n              {/* Daily Budget Section */}\r\n              <div className=\"mb-8\">\r\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                  Daily budget\r\n                </h2>\r\n                <p className=\"text-gray-700 mb-4\">₹{dailyBudget} daily</p>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"50\"\r\n                    max=\"1000\"\r\n                    value={dailyBudget}\r\n                    onChange={(e) => setDailyBudget(Number(e.target.value))}\r\n                    className=\"w-full h-2 bg-gray-300 rounded-lg appearance-none cursor-pointer slider\"\r\n                    id=\"budget-slider\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Duration Options */}\r\n              <div className=\"mb-6\">\r\n                <label className=\"flex items-center justify-between cursor-pointer mb-4\">\r\n                  <div>\r\n                    <h3 className=\"text-base font-semibold text-gray-900\">\r\n                      Run this ad until you pause it\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      let your ad run for as long as you'd like. you can pause\r\n                      any time in ad tools\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"relative ml-4\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"duration\"\r\n                      value=\"unlimited\"\r\n                      checked={budgetType === \"unlimited\"}\r\n                      onChange={(e) => setBudgetType(e.target.value)}\r\n                      className=\"sr-only\"\r\n                    />\r\n                    <div\r\n                      className={`w-5 h-5 rounded-full border-2 transition-all duration-200 ${\r\n                        budgetType === \"unlimited\"\r\n                          ? \"border-black bg-black\"\r\n                          : \"border-gray-400 bg-white\"\r\n                      }`}\r\n                    >\r\n                      {budgetType === \"unlimited\" && (\r\n                        <div className=\"w-2 h-2 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </label>\r\n\r\n                <label className=\"flex items-center justify-between cursor-pointer\">\r\n                  <div>\r\n                    <h3 className=\"text-base font-semibold text-gray-900\">\r\n                      Set duration\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-600 mb-2\">\r\n                      {duration} days\r\n                    </p>\r\n                    <div className=\"relative w-48\">\r\n                      <input\r\n                        type=\"range\"\r\n                        min=\"1\"\r\n                        max=\"30\"\r\n                        value={duration}\r\n                        onChange={(e) => setDuration(Number(e.target.value))}\r\n                        className={`w-full h-2 bg-gray-300 rounded-lg appearance-none cursor-pointer slider\r\n                      }`}\r\n                        // disabled={budgetType === \"unlimited\"}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <label className=\"relative ml-4 cursor-pointer inline-flex items-center\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"duration\"\r\n                      value=\"set\"\r\n                      checked={budgetType === \"set\"}\r\n                      onChange={(e) => setBudgetType(e.target.value)}\r\n                      className=\"sr-only\"\r\n                    />\r\n                    <div\r\n                      className={`w-5 h-5 rounded-full border-2 transition-all duration-200 ${\r\n                        budgetType === \"set\"\r\n                          ? \"border-black bg-black\"\r\n                          : \"border-gray-400 bg-white\"\r\n                      }`}\r\n                    >\r\n                      {budgetType === \"set\" && (\r\n                        <div className=\"w-2 h-2 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\r\n                      )}\r\n                    </div>\r\n                  </label>\r\n                </label>\r\n              </div>\r\n\r\n              {/* Budget Summary */}\r\n              <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n                <div className=\"flex justify-between items-center mb-2\">\r\n                  <span className=\"text-base font-semibold text-gray-900\">\r\n                    Ad budget\r\n                  </span>\r\n                  <span className=\"text-base font-semibold text-gray-900\">\r\n                    ₹{budgetType === \"set\" ? totalBudget : `${dailyBudget}`}{\" \"}\r\n                    {budgetType === \"set\" ? \"OVER 6 DAYS\" : \"DAILY\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm text-gray-600\">Estimated reach</span>\r\n                  <span className=\"text-sm text-gray-900\">\r\n                    {estimatedReach}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <button className=\"w-full bg-green-400 hover:bg-green-500 text-white font-medium py-4 rounded-xl transition-colors duration-200\">\r\n                Boost Post\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Product = ({ setProductToggle }) => {\r\n  const [product, setProduct] = useState({\r\n    category: \"\",\r\n    subCategory: \"\",\r\n    name: \"\",\r\n    price: \"\",\r\n    label: \"\",\r\n    city: \"\",\r\n    areaCode: \"\",\r\n    state: \"\",\r\n    description: \"\",\r\n    keywords: \"\",\r\n  });\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const producthandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProduct((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const producthandleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // setSelectedImage(URL.createObjectURL(file));\r\n      setSelectedImage(file);\r\n    }\r\n  };\r\n\r\n  // Example data.js (or inside your component)\r\n  const categories = [\r\n    {\r\n      name: \"Electronics\",\r\n      subCategories: [\"Mobile\", \"Laptop\", \"Tablet\"],\r\n    },\r\n    {\r\n      name: \"Clothing\",\r\n      subCategories: [\"Men\", \"Women\", \"Kids\"],\r\n    },\r\n    {\r\n      name: \"Home\",\r\n      subCategories: [\"Furniture\", \"Decor\", \"Appliances\"],\r\n    },\r\n  ];\r\n\r\n  const statesData = [\r\n    {\r\n      name: \"Gujarat\",\r\n      cities: [\r\n        {\r\n          name: \"Ahmedabad\",\r\n          areaCodes: [\"380001\", \"380015\", \"380060\"],\r\n        },\r\n        {\r\n          name: \"Surat\",\r\n          areaCodes: [\"395003\", \"395007\", \"395009\"],\r\n        },\r\n        {\r\n          name: \"Vadodara\",\r\n          areaCodes: [\"390001\", \"390007\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"Maharashtra\",\r\n      cities: [\r\n        {\r\n          name: \"Mumbai\",\r\n          areaCodes: [\"400001\", \"400050\"],\r\n        },\r\n        {\r\n          name: \"Pune\",\r\n          areaCodes: [\"411001\", \"411028\"],\r\n        },\r\n        {\r\n          name: \"Nagpur\",\r\n          areaCodes: [\"440001\", \"440012\"],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const selectedCategoryObj = categories.find(\r\n    (c) => c.name === product.category\r\n  );\r\n  const subCategories = selectedCategoryObj\r\n    ? selectedCategoryObj.subCategories\r\n    : [];\r\n\r\n  const selectedStateObj = statesData.find((s) => s.name === product.state);\r\n  const cities = selectedStateObj ? selectedStateObj.cities : [];\r\n\r\n  const selectedCityObj = cities.find((c) => c.name === product.city);\r\n  const areaCodes = selectedCityObj ? selectedCityObj.areaCodes : [];\r\n\r\n  const producthandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(product);\r\n    // axiosMain.post(\"api/create-post\",)\r\n\r\n    try {\r\n      const userDetail = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n      const userId = userDetail?.user?._id;\r\n\r\n      let imageUrl = \"\";\r\n\r\n      if (!selectedImage) {\r\n        console.warn(\"No image selected. Product creation aborted.\");\r\n        return;\r\n      }\r\n\r\n      // 1️⃣ Upload image first if selectedImage is a File\r\n      if (selectedImage && selectedImage instanceof File) {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedImage);\r\n\r\n        const uploadRes = await axiosMain.post(\"/upload\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n        console.log(uploadRes, \"uploadRes\");\r\n\r\n        if (uploadRes?.success) {\r\n          imageUrl = uploadRes?.fileUrl;\r\n        } else {\r\n          throw new Error(\"Image upload failed\");\r\n        }\r\n      }\r\n\r\n      // 2️⃣ Then create product\r\n      const payload = {\r\n        ...product,\r\n        price: Number(product.price),\r\n        userId: userId,\r\n        image: imageUrl,\r\n      };\r\n      console.log(payload, \"payload\");\r\n\r\n      const res = await axiosMain.post(\"/create-product\", payload);\r\n      // debugger;\r\n      console.log(\"Product created:\", res.data);\r\n      setProductToggle(false);\r\n\r\n      // Optional: success message or reset form here\r\n    } catch (err) {\r\n      console.error(\"Error creating product:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-sm mx-auto bg-white p-4 rounded-md shadow font-poppins\">\r\n      <form onSubmit={producthandleSubmit} className=\"space-y-4\">\r\n        <h2 className=\"text-lg font-semibold\">Product Listing</h2>\r\n\r\n        {/* Product Category */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">\r\n            Product Category\r\n          </label>\r\n          <div className=\"relative w-full\">\r\n            <select\r\n              name=\"category\"\r\n              value={product.category}\r\n              onChange={producthandleChange}\r\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-1 focus:ring-black appearance-none pr-10\"\r\n              style={{ backgroundColor: \"#FAFAFA\" }}\r\n            >\r\n              {/* <option>Select Category</option> */}\r\n              <option>Select Category</option>\r\n              {categories.map((c) => (\r\n                <option key={c.name} value={c.name}>\r\n                  {c.name}\r\n                </option>\r\n              ))}\r\n              {/* Add dynamic options */}\r\n            </select>\r\n\r\n            {/* Lucide Down Arrow */}\r\n            <ChevronDown\r\n              className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none text-gray-500\"\r\n              size={18}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Sub Category */}\r\n        <div className=\"relative w-full\">\r\n          <label className=\"block text-sm font-medium mb-1\">Sub Category</label>\r\n\r\n          <select\r\n            name=\"subCategory\"\r\n            value={product.subCategory}\r\n            onChange={producthandleChange}\r\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black appearance-none pr-10\"\r\n            style={{ backgroundColor: \"#FAFAFA\" }}\r\n          >\r\n            {/* <option>Select Category</option> */}\r\n            <option>Select Sub Category</option>\r\n            {subCategories.map((sub) => (\r\n              <option key={sub} value={sub}>\r\n                {sub}\r\n              </option>\r\n            ))}\r\n            {/* Add your dynamic options here */}\r\n          </select>\r\n\r\n          <ChevronDown\r\n            className=\"absolute right-3 top-[38px] transform -translate-y-1/2 pointer-events-none text-gray-500\"\r\n            size={18}\r\n          />\r\n        </div>\r\n\r\n        {/* Product Name */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">Product Name</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Product Name\"\r\n            name=\"name\"\r\n            value={product.name}\r\n            onChange={producthandleChange}\r\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black\"\r\n            style={{ backgroundColor: \"#FAFAFA\" }}\r\n          />\r\n        </div>\r\n\r\n        {/* Upload Photo */}\r\n        <div>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* Label */}\r\n            <label className=\"text-xs font-semibold min-w-[100px]\">\r\n              Upload Product Photo\r\n            </label>\r\n\r\n            {/* Image + Upload Button */}\r\n            <div className=\"flex items-center gap-2\">\r\n              {/* Image Preview */}\r\n              <div className=\"w-10 h-10 overflow-hidden rounded-lg border border-gray-300\">\r\n                {selectedImage ? (\r\n                  <img\r\n                    src={\r\n                      typeof selectedImage === \"string\"\r\n                        ? selectedImage\r\n                        : URL.createObjectURL(selectedImage)\r\n                    }\r\n                    alt=\"preview\"\r\n                    className=\"w-full h-full object-cover\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"w-full h-full bg-[#FAFAFA]\" />\r\n                )}\r\n              </div>\r\n\r\n              {/* Upload Button */}\r\n              <label\r\n                htmlFor=\"upload\"\r\n                className=\"w-10 h-10 bg-black rounded-lg flex items-center justify-center cursor-pointer\"\r\n              >\r\n                <Upload size={20} color=\"white\" />\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"upload\"\r\n                  accept=\"image/*\"\r\n                  className=\"hidden\"\r\n                  onChange={producthandleImageUpload}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Product Price */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">\r\n            Product Price\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Price\"\r\n            name=\"price\"\r\n            value={product.price}\r\n            onChange={producthandleChange}\r\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black\"\r\n            style={{ backgroundColor: \"#FAFAFA\" }}\r\n          />\r\n        </div>\r\n\r\n        {/* Product Label */}\r\n        <div className=\"relative w-full\">\r\n          <label className=\"block text-sm font-medium mb-1\">\r\n            Product Label\r\n          </label>\r\n\r\n          <select\r\n            name=\"label\"\r\n            value={product.label}\r\n            onChange={producthandleChange}\r\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black appearance-none pr-10\"\r\n            style={{ backgroundColor: \"#FAFAFA\" }}\r\n          >\r\n            <option>Select Value</option>\r\n            <option>Unit</option>\r\n            <option>Kg</option>\r\n            <option>Piece</option>\r\n          </select>\r\n\r\n          <ChevronDown\r\n            className=\"absolute right-3 top-[43px] transform -translate-y-1/2 pointer-events-none text-gray-500\"\r\n            size={18}\r\n          />\r\n        </div>\r\n\r\n        {/* State */}\r\n        <div className=\"relative w-full\">\r\n          <label className=\"block text-sm font-medium mb-1\">State</label>\r\n\r\n          <select\r\n            name=\"state\"\r\n            value={product.state}\r\n            onChange={producthandleChange}\r\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black appearance-none pr-10\"\r\n            style={{ backgroundColor: \"#FAFAFA\" }}\r\n          >\r\n            {/* <option>Select State</option> */}\r\n            <option>Select State</option>\r\n            {statesData.map((s) => (\r\n              <option key={s.name} value={s.name}>\r\n                {s.name}\r\n              </option>\r\n            ))}\r\n            {/* Add dynamic state options here */}\r\n          </select>\r\n\r\n          <ChevronDown\r\n            className=\"absolute right-3 top-[43px] transform -translate-y-1/2 pointer-events-none text-gray-500\"\r\n            size={18}\r\n          />\r\n        </div>\r\n\r\n        {/* City Name */}\r\n        <div className=\"relative w-full\">\r\n          <label className=\"block text-sm font-medium mb-1\">City Name</label>\r\n\r\n          <select\r\n            name=\"city\"\r\n            value={product.city}\r\n            onChange={producthandleChange}\r\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black appearance-none pr-10\"\r\n            style={{ backgroundColor: \"#FAFAFA\" }}\r\n          >\r\n            {/* <option>Select City Name</option>\r\n            <option>New York</option>\r\n            <option>Los Angeles</option> */}\r\n            <option>Select City Name</option>\r\n            {cities.map((c) => (\r\n              <option key={c.name} value={c.name}>\r\n                {c.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <ChevronDown\r\n            className=\"absolute right-3 top-[43px] transform -translate-y-1/2 pointer-events-none text-gray-500\"\r\n            size={18}\r\n          />\r\n        </div>\r\n        {/* Area Code */}\r\n        <div className=\"relative w-full\">\r\n          <label className=\"block text-sm font-medium mb-1\">Area Code</label>\r\n\r\n          <select\r\n            name=\"areaCode\"\r\n            value={product.areaCode}\r\n            onChange={producthandleChange}\r\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black appearance-none pr-10\"\r\n            style={{ backgroundColor: \"#FAFAFA\" }}\r\n          >\r\n            {/* <option>Select Area code</option>\r\n            <option>123</option>\r\n            <option>456</option> */}\r\n            <option>Select Area code</option>\r\n            {areaCodes.map((code) => (\r\n              <option key={code} value={code}>\r\n                {code}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <ChevronDown\r\n            className=\"absolute right-3 top-[43px] transform -translate-y-1/2 pointer-events-none text-gray-500\"\r\n            size={18}\r\n          />\r\n        </div>\r\n\r\n        {/* Description */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">\r\n            Product Description\r\n          </label>\r\n          <textarea\r\n            name=\"description\"\r\n            rows={2}\r\n            placeholder=\"Enter Description\"\r\n            value={product.description}\r\n            onChange={producthandleChange}\r\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black\"\r\n            style={{ backgroundColor: \"#FAFAFA\" }}\r\n          ></textarea>\r\n        </div>\r\n\r\n        {/* Keywords */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">\r\n            Product Key Wards\r\n          </label>\r\n          <textarea\r\n            name=\"keywords\"\r\n            rows={2}\r\n            placeholder=\"Enter Key wards\"\r\n            value={product.keywords}\r\n            onChange={producthandleChange}\r\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-black\"\r\n            style={{ backgroundColor: \"#FAFAFA\" }}\r\n          ></textarea>\r\n        </div>\r\n\r\n        {/* Submit */}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-dark w-full text-white rounded-md font-medium transition\"\r\n          // style={{ backgroundColor: \"#000000\" }}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductListing;\r\n"],"names":["UploadCard","_ref","label","setProductToggle","_jsxs","onClick","className","children","_jsx","UploadPosts","_ref2","handleClose","modalName","setModalName","selectedImagePost","setSelectedImagePost","useState","isEnabled","setIsEnabled","post","setPost","description","keywords","website","setWebsite","selectedAction","setSelectedAction","selectedActionMsg","setSelectedActionMsg","dailyBudget","setDailyBudget","duration","setDuration","budgetType","setBudgetType","totalBudget","estimatedReach","Math","floor","posthandleChange","e","name","value","target","prev","onSubmit","async","preventDefault","_userDetail$user2","userDetail","JSON","parse","localStorage","getItem","userId","user","_id","imageUrl","console","warn","File","formData","FormData","append","uploadRes","axiosMain","headers","log","success","Error","fileUrl","payload","image","res","data","err","error","_Fragment","src","selectedImage","URL","createObjectURL","alt","htmlFor","Upload","size","color","type","id","accept","onChange","file","files","rows","placeholder","checked","map","action","typeof","min","max","Number","Product","_ref3","product","setProduct","category","subCategory","price","city","areaCode","state","setSelectedImage","producthandleChange","categories","subCategories","statesData","cities","areaCodes","selectedCategoryObj","find","c","selectedStateObj","s","selectedCityObj","_userDetail$user3","style","backgroundColor","ChevronDown","sub","code","ProductListing","producttoggle","posttoggle","setPostToggle","boostToggle","setBoostToggle","photo","categoryCards","username","userImage","mainImage","shoes","likes","imageAlt","book","train","teddy","card","Avatar","sx","width","height","position","top","left","zIndex","border","MoreHorizontal","borderRadius","Heart","save","fontFamily","lineHeight"],"sourceRoot":""}