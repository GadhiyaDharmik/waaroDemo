{"version":3,"file":"static/js/32.ca67b903.chunk.js","mappings":"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","sources":["pages/UploadData/UploadData.js"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, Card, Row, Col } from \"react-bootstrap\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport UploadPlaceholder from \"../../asset/upload_placeholder.png\";\r\nimport FileUploadIcon from \"@mui/icons-material/UploadFile\";\r\nimport { KJUR } from \"jsrsasign\";\r\nimport axiosMain from \"../utils/axiosMain\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// ======= Service Account Credentials & Config =========\r\nconst SERVICE_ACCOUNT_EMAIL = \"data-shopper@ecommerce-440713.iam.gserviceaccount.com\";\r\nconst PRIVATE_KEY = `-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCekTGzBdN5dzib\\nZOz7FoowkCyJ1fxwDQdznSGv/vOANEE281yiQSLtsOfeEMap4bjdWF05n8Ny+NPG\\nu7BqfhtxJO6q9hHmapSsyFFTzWp4bu68U9L6GRbhPhOL5ijc6AVFDEWz9xi3UvkG\\npwcqQvAO8P9uaFQ/OTfsgAx6CVP+6353bXgKSH3DVqxj82kF1qHOcxwSS/xtrfdZ\\nMucktK54Y8J29jnkhOKwKgmwW0nFGRIB4Nn0c1iBGabCGO4YO6in64z9XtMDEjTK\\nQjGOeZyyhc/oXK5Qx0BwduceZ0mzZH6EnGGi7nz+s1+Dt7RwXm/zi8FxFwhXKMAP\\n+t+ctRS3AgMBAAECggEAFfm+uYuFKMBXyAbPZmepSdxb+n5S40nq+SA9xaEVKMoV\\nKlhv7iIOL9g59Odo9leiFzW34H8+cctVDlB/Z+2HlWwDkmNSomxYToSJ6438binG\\n9wgRpTefmXfQ8wKNhzq2AEEYfT3cNGFQwetEGEdOncN9+FSH2HtFlNvqNBThieKW\\neY2HPJsKosNbphq+rn4BDXsyVMXldz6vKhluA0wei2G/siBvFz2x/lOhe58AiVSd\\nDDHLYsHiuwJjoeLg2H8B3yy29Edch3A5L5XzEGbXK8nek5ZZRegbuertH/vteCNA\\nldH/VTvFH4pAJmWUhcylkS9O8RO4nuEWlSQviXKcAQKBgQDd1Y4WIpY25r5RmvCo\\n9Qpq/xAgHL6ewuUrCK7nfUeZRy6a25y+UULsLZ4XSh6XSXq5QHHq9pnXXV+rJ2rj\\n1hpwXk6GQ4FD7pn8fnq9kkrBKodneaT/6HWd2QRsKDFm2nxp7Ujvh46hTh1rW6hj\\nUwnd62emq5y6tOcH3wwvK+fxIQKBgQC2/Sf3V1J3oNK5hclXoabyY9xzUQRvCOt+\\nDKDIRu8PazlaKAxVLUdqOG3jPOJ2Hmxo97uI8cAYc7RPEDL/tzxJU0Yd/4MxKXS+\\nsKuRke0acUQEFqPG3YgoBXJIJU6cYa4cTXHQ6ECZh5Czf9ZWWxSDXHwwtSr1xZwP\\nWmss0w1S1wKBgDDEDIszKUCCcx4vaG5MB/FDhwD4MLNn9scCDqkW8lFww38Jfiic\\nZpDS6mkGQzlQzujAkQptEZ61iR1v+eCCJafEI5ECb/1GC5XlHAhmi4ZxWfjWVf5n\\n1MtRdNZt84Y/y4/huOHnM+Sj7nW2XYsQKyAc6tlJ6pdkw1EIqH4KMd/hAoGAMlnM\\nUnm7nmEpOpU+hpdbaZzivvRPBQJuUfvFjfY+t35ohI86fYF9AhRO4FUTdy7945Av\\nEQp8Mf48YfjyH3za4M5CH+T7w15F2magfuipVjpOXdWg8Qpp+aEuBf4F+G/ESdNh\\nevs9M0GjJlEJuC9NoKulHH3tOT1LqMnXbbkRFHcCgYB+eEz2MObyU0jB0UpLFscC\\ncmEb+2CiGSwYFM8ZsS0Wg3wYGUW/E0Pf+g8lYBNlQGGgRL6Ndbo1pII53NXksvce\\npPvcYZMLosl4R9uQgv6mU3dRD+n7aCXRM4sDQiohRFcMyLlJOWEt+T50tz5inAfM\\nLqqA9D9T/YvMWh7k5whNDw==\\n-----END PRIVATE KEY-----\\n`\r\nconst SCOPE = \"https://www.googleapis.com/auth/drive.file\";\r\nconst TOKEN_URL = \"https://oauth2.googleapis.com/token\";\r\nconst FOLDER_ID = \"1rUZu7XeLQoPVSMYNSKjAhyIR64LDyQTx\";\r\n\r\n// ======= Function to Generate a JWT =========\r\nfunction generateJWT() {\r\n  const header = { alg: \"RS256\", typ: \"JWT\" };\r\n  const iat = Math.floor(Date.now() / 1000);\r\n  const exp = iat + 3600; // valid for 1 hour\r\n  const payload = {\r\n    iss: SERVICE_ACCOUNT_EMAIL,\r\n    scope: SCOPE,\r\n    aud: TOKEN_URL,\r\n    exp: exp,\r\n    iat: iat,\r\n  };\r\n\r\n  const sHeader = JSON.stringify(header);\r\n  const sPayload = JSON.stringify(payload);\r\n  const jwt = KJUR.jws.JWS.sign(\"RS256\", sHeader, sPayload, PRIVATE_KEY);\r\n  return jwt;\r\n}\r\n\r\n// ======= Function to Exchange JWT for an Access Token =========\r\nasync function getAccessToken(jwt) {\r\n  const data = {\r\n    grant_type: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\r\n    assertion: jwt,\r\n  };\r\n\r\n  const formBody = Object.keys(data)\r\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\r\n    .join(\"&\");\r\n\r\n  const response = await fetch(TOKEN_URL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    body: formBody,\r\n  });\r\n\r\n  const tokenData = await response.json();\r\n  return tokenData.access_token;\r\n}\r\n\r\n// ======= Function to Upload File to Google Drive =========\r\nasync function uploadFile(accessToken, file, type) {\r\n  const metadata = {\r\n    name: file.name,\r\n    parents: [type !== \"image\" ? \"1rUZu7XeLQoPVSMYNSKjAhyIR64LDyQTx\" : \"1zup7WASF2ErRBgqowlVzfw5PjFrbMFQB\"],\r\n  };\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"metadata\", new Blob([JSON.stringify(metadata)], { type: \"application/json\" }));\r\n  formData.append(\"file\", file);\r\n\r\n  const response = await fetch(\r\n    \"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart\",\r\n    {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Authorization\": `Bearer ${accessToken}`,\r\n      },\r\n      body: formData,\r\n    }\r\n  );\r\n\r\n  return await response.json();\r\n}\r\n\r\nfunction UploadData() {\r\n  const [image, setImage] = useState(null);\r\n  const [excelFile, setExcelFile] = useState(null);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\")\r\n\r\n\r\n  const resetForm = () => {\r\n    setImage(null)\r\n    setExcelFile(null)\r\n    setTitle(\"\")\r\n    setDescription(\"\")\r\n    setPrice(\"\")\r\n  }\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setExcelFile(file);\r\n    }\r\n  };\r\n\r\n  // Using Cloud :-\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault(); // Prevent form reload\r\n\r\n  //   if (!image) {\r\n  //     console.error(\"Please select an image\");\r\n  //     return;\r\n  //   }\r\n  //   if (!excelFile) {\r\n  //     console.error(\"Please select an Excel file\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   try {\r\n  //     // 1. Generate a JWT using your Service Account credentials\r\n  //     const jwt = generateJWT();\r\n  //     // 2. Exchange the JWT for an access token\r\n  //     const accessToken = await getAccessToken(jwt);\r\n\r\n  //     // 3. Upload the image file\r\n  //     const imageUploadResult = await uploadFile(accessToken, image, \"image\");\r\n  //     // console.log(\"Image upload result:\", imageUploadResult);\r\n\r\n  //     // 4. Upload the Excel file\r\n  //     const excelUploadResult = await uploadFile(accessToken, excelFile, \"file\");\r\n  //     // console.log(\"Excel file upload result:\", excelUploadResult);\r\n\r\n  //     // alert(\"Both files uploaded successfully!\", {\r\n  //     //   image: imageUploadResult.id,\r\n  //     //   excel: excelUploadResult.id,\r\n  //     //   description: description,\r\n  //     //   price: price,\r\n  //     // })\r\n\r\n  //     axiosMain.post(\"/data-category\", {\r\n  //       image: imageUploadResult.id,\r\n  //       excel: excelUploadResult.id,\r\n  //       title: title,\r\n  //       description: description,\r\n  //       price: price,\r\n  //     }).then((res) => {\r\n  //       if (res.success) {\r\n  //         toast.success(res.message)\r\n  //         resetForm()\r\n  //       } else {\r\n  //         toast.error(res.message)\r\n  //       }\r\n  //     }).catch((err) => console.log(err))\r\n  //   } catch (error) {\r\n  //     console.error(\"Upload error:\", error);\r\n  //     alert(\"Upload failed!\");\r\n  //   }\r\n  // };\r\n\r\n  // Using System :-\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!title || !description || !price) {\r\n      alert(\"All fields are required!\");\r\n      return;\r\n    }\r\n\r\n    if (!image) {\r\n      alert(\"Please select image!\");\r\n      return;\r\n    }\r\n    if (!excelFile) {\r\n      alert(\"Please select an Excel file\");\r\n      return;\r\n    }\r\n\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    formData.append(\"excel\", excelFile);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"price\", price);\r\n\r\n    try {\r\n      const response = await axiosMain.post(\"https://waaro.in/api/upload-data\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      alert(\"Upload successful!\");\r\n      resetForm()\r\n    } catch (error) {\r\n      console.error(\"Upload failed:\", error);\r\n      alert(\"Upload failed!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"p-4\" style={{ background: \"white\" }}>\r\n      <Row>\r\n        <Col className=\"mb-4\">\r\n          <Form onSubmit={handleSubmit} className=\"d-flex flex-column align-items-center\">\r\n            <Form.Group className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"imageUpload\"\r\n                style={{\r\n                  width: \"200px\",\r\n                  height: \"200px\",\r\n                  cursor: \"pointer\",\r\n                  background: \"#f5f5f5\",\r\n                  border: \"2px solid #fabb18\",\r\n                  borderRadius: \"10px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={image ? URL.createObjectURL(image) : UploadPlaceholder}\r\n                  alt=\"Upload\"\r\n                  style={{\r\n                    maxWidth: \"100%\",\r\n                    maxHeight: \"100%\",\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                />\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"imageUpload\"\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                onChange={handleImageChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3 w-100\">\r\n              <Form.Label className=\"fs-6\">Upload Excel File</Form.Label>\r\n              <label\r\n                htmlFor=\"fileUpload\"\r\n                className=\"d-flex align-items-center justify-content-between p-2\"\r\n                style={{\r\n                  border: \"2px solid #fabb18\",\r\n                  borderRadius: \"7px\",\r\n                  cursor: \"pointer\",\r\n                  background: \"#fff\",\r\n                }}\r\n              >\r\n                <Typography>\r\n                  {excelFile ? excelFile.name : \"Choose an Excel file...\"}\r\n                </Typography>\r\n                <FileUploadIcon style={{ color: \"#fabb18\" }} />\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"fileUpload\"\r\n                accept=\".xls,.xlsx\"\r\n                style={{ display: \"none\" }}\r\n                onChange={handleFileChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3 w-100\">\r\n              <Form.Label className=\"fs-6\">$ Price</Form.Label>\r\n              <TextField\r\n                fullWidth\r\n                rows={3}\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                placeholder=\"Enter your Price...\"\r\n                InputProps={{\r\n                  style: { border: \"2px solid #fabb18\", borderRadius: \"7px\" },\r\n                }}\r\n                sx={{ background: \"white\", borderRadius: \"7px\" }}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3 w-100\">\r\n              <Form.Label className=\"fs-6\">Title</Form.Label>\r\n              <TextField\r\n                fullWidth\r\n                rows={3}\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Enter your Title...\"\r\n                InputProps={{\r\n                  style: { border: \"2px solid #fabb18\", borderRadius: \"7px\" },\r\n                }}\r\n                sx={{ background: \"white\", borderRadius: \"7px\" }}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3 w-100\">\r\n              <Form.Label className=\"fs-6\">Description</Form.Label>\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                rows={3}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Enter your description...\"\r\n                InputProps={{\r\n                  style: { border: \"2px solid #fabb18\", borderRadius: \"7px\" },\r\n                }}\r\n                sx={{ background: \"white\", borderRadius: \"7px\" }}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\" className=\"w-100 pt-2 pb-2\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default UploadData;"],"names":["image","setImage","useState","excelFile","setExcelFile","title","setTitle","description","setDescription","price","setPrice","_jsx","Card","className","style","background","children","Row","Col","_jsxs","Form","onSubmit","async","e","preventDefault","alert","formData","FormData","append","axiosMain","post","headers","error","console","Group","htmlFor","width","height","cursor","border","borderRadius","display","alignItems","justifyContent","overflow","src","URL","createObjectURL","UploadPlaceholder","alt","maxWidth","maxHeight","objectFit","type","id","accept","onChange","file","target","files","Label","Typography","name","FileUploadIcon","color","TextField","fullWidth","rows","value","placeholder","InputProps","sx","multiline","Button","variant"],"sourceRoot":""}