{"version":3,"file":"static/js/425.0279c3a5.chunk.js","mappings":"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","sources":["pages/EmailSender/EmailSender.js"],"sourcesContent":["import {\r\n  Avatar,\r\n  Button as MUIButton,\r\n  Card as MUICard,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  InputBase,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport {\r\n  Search,\r\n  Home,\r\n  Database,\r\n  Send,\r\n  MessageSquare,\r\n  Settings,\r\n  LogOut,\r\n  ShoppingCart,\r\n  Fullscreen,\r\n} from \"lucide-react\";\r\nimport { Button } from \"react-bootstrap\"; // For React Bootstrap Buttons\r\nimport { MdOutlineAddBox } from \"react-icons/md\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ShoppingCartIcon from \"../../asset/shopping-cart.png\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axiosMain from \"../utils/axiosMain\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { useState } from \"react\"; // Add this import\r\n\r\nfunction EmailSender() {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      mobile: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required(\"Name is required\"),\r\n      mobile: Yup.string()\r\n        .matches(/^\\d{10}$/, \"Mobile number must be 10 digits\")\r\n        .required(\"Mobile number is required\"),\r\n      email: Yup.string()\r\n        .email(\"Invalid email address\")\r\n        .required(\"Email is required\"),\r\n      message: Yup.string().required(\"Message is required\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(\"Form values:\", values);\r\n      alert(\"Inquiry submitted successfully!\");\r\n      formik.resetForm();\r\n      axiosMain\r\n        .post(\"/inquiry\", { mobileNumber: values.mobile, ...values })\r\n        .then((res) => {\r\n          if (res.success) {\r\n            toast.success(res.message);\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n  });\r\n  // Sample data for cards\r\n  const cards = Array(12).fill({\r\n    title: \"Doctor & Hospital\",\r\n    subtitle: \"Salon & Beauty Parlour\",\r\n  });\r\n\r\n  function handleSave() {\r\n    setIsSubmitted(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-[#F3F2FF] flex\" style={{ flexGrow: 1 }}>\r\n      {/* Main Content */}\r\n      <main style={{ flexGrow: 1, height: \"100%\" }}>\r\n        {/* <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              marginBottom: \"32px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h5\" fontWeight=\"bold\">\r\n              Dashboard / All Category\r\n            </Typography>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", gap: \"16px\" }}>\r\n              <MUIButton variant=\"outlined\" startIcon={<ShoppingCart />}>\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: \"-4px\",\r\n                    right: \"-4px\",\r\n                    backgroundColor: \"red\",\r\n                    color: \"white\",\r\n                    borderRadius: \"50%\",\r\n                    width: \"16px\",\r\n                    height: \"16px\",\r\n                    fontSize: \"12px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  1\r\n                </div>\r\n              </MUIButton>\r\n              <Avatar src=\"https://github.com/shadcn.png\" alt=\"CN\" />\r\n            </div>\r\n          </div> */}\r\n\r\n        {/* <div style={{ position: \"relative\", marginBottom: \"32px\" }}> */}\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{\r\n                fontFamily: \"Inter\",\r\n                fontWeight: \"700\",\r\n                fontSize: \"24px\",\r\n                lineHeight: \"29.05px\",\r\n                letterSpacing: \"0%\",\r\n                color: \"#fabb18\",\r\n                fontWeight: \"500\",\r\n                padding: \".5rem\",\r\n              }}\r\n            >\r\n              {isSubmitted ? `Verify | ${name} ${email}` : `New Sender`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className=\"text-end\">\r\n            <MUIButton\r\n              variant=\"contained\"\r\n              //   startIcon={<ShoppingCartIcon />}\r\n              sx={{\r\n                backgroundColor: \"#000000\",\r\n                color: \"white\",\r\n                borderRadius: \"15px\",\r\n                textTransform: \"none\",\r\n                fontSize: \"1rem\",\r\n                // padding: \"1rem 2.5rem\",\r\n                \"&:hover\": {\r\n                  backgroundColor: \"#5B4DC9\",\r\n                },\r\n              }}\r\n              onClick={() => navigate(\"/cart\")}\r\n            >\r\n              <div sx={{ color: \"white\" }} className=\"me-2\">\r\n                <img src={ShoppingCartIcon} alt=\"logo\" />\r\n              </div>\r\n              Your Campion\r\n            </MUIButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box\r\n           sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\", // ⬅️ Ensures left alignment\r\n            borderRadius: \"15px\",\r\n            padding: \"1rem\",\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            marginTop: \"1rem\",\r\n            flexGrow: 1,\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          {isSubmitted ? (\r\n            <Verify />\r\n          ) : (\r\n            <form onSubmit={formik.handleSubmit} style={{ width: \"100%\" }}>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"name\" className=\"form-label\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your Name\"\r\n                  className={`form-control w-50 ${\r\n                    formik.touched.name && formik.errors.name\r\n                      ? \"is-invalid\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{\r\n                    border: \"2px solid #fabb18\", // Add blue border\r\n                    borderRadius: \"5px\", // Optional rounded corners\r\n                    padding: \"8px\", // Adjust padding for better styling\r\n                    outline: \"none\", // Remove default focus outline\r\n                  }}\r\n                  value={formik.values.name}\r\n                  onChange={(e) => {\r\n                    formik.setFieldValue(\"name\", e.target.value);\r\n                    setName(e.target.value);\r\n                  }} // Manually updating Formik state\r\n                />\r\n                {formik.touched.name && formik.errors.name ? (\r\n                  <div className=\"invalid-feedback\">{formik.errors.name}</div>\r\n                ) : null}\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"email\" className=\"form-label\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  style={{\r\n                    border: \"2px solid #fabb18\", // Add blue border\r\n                    borderRadius: \"5px\", // Optional rounded corners\r\n                    padding: \"8px\", // Adjust padding for better styling\r\n                    outline: \"none\", // Remove default focus outline\r\n                    width: \"50%\"\r\n                  }}\r\n                  placeholder=\"Enter your Email\"\r\n                  className=\"form-control\"\r\n                  onChange={(e) => {\r\n                    formik.setFieldValue(\"email\", e.target.value);\r\n                    setEmail(e.target.value);\r\n                  }} // ✅ Correctly links to Formik's state\r\n                />\r\n                {formik.touched.email && formik.errors.email ? (\r\n                  <div className=\"invalid-feedback\">{formik.errors.email}</div>\r\n                ) : null}\r\n              </div>\r\n\r\n              <div className=\"btn-toolbar\" style={{ gap: \"20px\" }}>\r\n                <div\r\n                  className=\"btn-group mr-2\"\r\n                  role=\"group\"\r\n                  aria-label=\"First group\"\r\n                >\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    \r\n                    style={{ background: \"#000000\" }}\r\n                    type=\"submit\"\r\n                    onClick={handleSave}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n                <div\r\n                  className=\"btn-group mr-2\"\r\n                  role=\"group\"\r\n                  aria-label=\"First group\"\r\n                >\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    style={{ background: \"#000000\" }}\r\n                    type=\"button\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Box>\r\n\r\n        {/* </div> */}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Verify() {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"50%\",\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\", // ⬅️ Ensures content is aligned to the start\r\n      }}\r\n    >\r\n      <Typography>\r\n        To use this sender, your email address must be verified. We have sent\r\n        you a verification code by email.\r\n      </Typography>\r\n      <Typography>\r\n        If you have not received the verification code, click the{\" \"}\r\n        <strong>Resend verification code button.</strong>\r\n      </Typography>\r\n\r\n      <Button\r\n        variant=\"primary\"\r\n        className=\"mt-3\"\r\n        style={{ background: \"#000000\" }}\r\n      >\r\n        Resend verification code (59s)\r\n      </Button>\r\n\r\n      {/* <div className=\"d-flex mt-3\" style={{ gap: \"10px\" }}>\r\n        {[...Array(6)].map((_, index) => (\r\n          <input\r\n            key={index}\r\n            type=\"text\"\r\n            className=\"otp-box\"\r\n            maxLength={1}\r\n            style={{\r\n              width: \"40px\",\r\n              textAlign: \"center\",\r\n              border: \"2px solid #fabb18\",\r\n              borderRadius: \"5px\",\r\n            }}\r\n          />\r\n        ))}\r\n      </div> */}\r\n\r\n      <div className=\"otp-container-otp mt-3\">\r\n            {[...Array(6)].map((digit, index) => (\r\n              <input\r\n                key={index}\r\n                type=\"text\"\r\n                maxLength={1}\r\n                value={digit}\r\n                // onChange={(e) => handleChange(index, e.target.value)}\r\n                // onKeyDown={(e) => handleKeyDown(index, e)}\r\n                // onPaste={handlePaste}\r\n                // ref={(el) => (inputRefs.current[index] = el)}\r\n                className=\"otp-input\"\r\n                // required\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n      <div className=\"btn-toolbar mt-3\" style={{ gap: \"20px\" }}>\r\n        <Button variant=\"primary\" style={{ background: \"#000000\" }}>\r\n          Verify\r\n        </Button>\r\n        <Button variant=\"secondary\" style={{ background: \"#000000\" }}>\r\n          I will do it later\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default EmailSender;\r\n"],"names":["Verify","_jsxs","style","width","textAlign","display","flexDirection","alignItems","children","_jsx","Typography","Button","variant","className","background","Array","map","digit","index","type","maxLength","value","gap","isSubmitted","setIsSubmitted","useState","email","setEmail","name","setName","navigate","useNavigate","formik","useFormik","initialValues","mobile","message","validationSchema","Yup","required","matches","onSubmit","values","console","log","alert","resetForm","axiosMain","post","mobileNumber","then","res","success","toast","error","catch","err","fill","title","subtitle","flexGrow","height","Grid","container","spacing","item","xs","sm","md","lg","xl","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","color","padding","MUIButton","sx","backgroundColor","borderRadius","textTransform","onClick","src","alt","Box","marginTop","handleSubmit","htmlFor","id","placeholder","touched","errors","border","outline","onChange","e","setFieldValue","target","role"],"sourceRoot":""}